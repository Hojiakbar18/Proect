{"version":3,"sources":["photos/Business-Self-Driving-Trucks-TuSimple.jpg","utills/constants.js","apiPaths/api.js","redux/types/AuthTypes.js","pages/HomePage.js","redux/actions/AuthAction.js","utills/Request.js","components/AdminRequest.js","utills/UsefullFunctions.js","components/NavBar.js","pages/Dashboard.js","pages/SalePage.js","redux/reducers/authReducer.js","pages/Dazvol.js","pages/Supplier.js","pages/Warehouse.js","pages/Products.js","pages/Loading.js","pages/TIR.js","pages/Employee.js","pages/Settings.js","pages/DazvolSale.js","App.js","index.js"],"names":["BASE_URL","TOKEN_NAME","api","LOGIN","HomePage","applying","backgroundImage","fura","backgroundRepeat","backgroundPosition","backgroundSize","width","height","className","onValidSubmit","e","v","axios","post","then","res","status","toast","success","localStorage","setItem","data","parsedToken","jwtDecode","props","signIn","roles","roleName","history","push","catch","error","type","label","name","style","Component","mapDispatch","payload","connect","request","method","url","headers","getItem","AdminRequest","user","item","response","params","dazvol","page","size","search","active","companyId","id","kpi","tir","dazvolNameId","categories","users","role","getRoleNameFromJWT","NavBar","href","onClick","removeItem","Dashboard","state","allTires","company","dazvolCompany","tirSize","malga","prime","iml","viva","totalElements","TURKEY_2X","me","getAllCompany","console","log","setState","map","index","getAllTirByActive","authority","object","length","configTir","sales","this","xField","yField","position","backgroundColor","meta","alias","config1","appendPadding","value","angleField","colorField","radius","interactions","onReady","plot","on","evt","x","y","options","chart","getTooltipItems","store","SalePage","showSaveModal","showDeleteModal","allDazvols","allDazvolsByPageable","deleteIds","dazvolName","getAllTirsSalesByPageable","openSaveOrEditModal","showSaveOrEditModal","openDeleteModal","onChange","s","target","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","itemClass","linkClass","Table","bordered","hover","userName","carNumber","date","customer","firstName","tirs","i","tirNumber","Modal","isOpen","toggle","ModalBody","saveOrEditTirSale","multiple","defaultValue","ModalFooter","ModalHeader","removeDazvolSale","message","warning","getAllDazvolsByPageable","initialState","userRole","auth","action","Dazvol","getAllDazvolNames","checked","dazvolNumber","experienceDate","companyName","changeActiveOfDazvol","changeActive","saveOrEditDazvol","removeDazvol","Supplier","Warehouse","Products","Loading","TIR","loading","allTiresByPageable","getAllTiresByPageable","finally","placeholder","fromDate","list","changeActiveOfTir","saveOrEditTir","Employee","allEmployees","allEmployeesByPageable","permissions","getAllUsersByPageable","getAllRoles","username","lastName","phoneNumber","fixSalary","changeActiveOfUser","saveOrEditUser","requared","removeUser","Settings","getAllDazvolSalesByPageable","getAllDazvolByActive","saveOrEditDazvolSale","allReducers","combineReducers","createStore","App","path","component","DazvolSale","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAAe,MAA0B,kE,kBCC5BA,EAAS,QAETC,EAAW,YCHVC,EAEJ,aAFIA,EAGP,WAHOA,EAOY,uBAPZA,EAQU,mBARVA,EASM,gBATNA,EAUM,uBAVNA,EAWE,oBAXFA,EAYQ,oBAZRA,EAaY,uBAbZA,EAcI,iBAdJA,EAeQ,qBAfRA,EAkBU,oBAlBVA,EAmBK,iBAnBLA,EAoBS,oBApBTA,EAuBY,kBAvBZA,EAwBS,qBAxBTA,EAyBgB,2BAzBhBA,EA0Bc,wBA1BdA,EA2BG,gBA3BHA,EA4BA,WA5BAA,EA6BM,mBA7BNA,EA8BU,sBA9BVA,EA+BU,sB,iBC/BXC,EAAM,Q,eCUbC,E,4JACF,WAAU,IAAD,OAyBDC,EAAW,CACXC,gBAAiB,OAASC,EAAO,IACjCC,iBAAkB,YAClBC,mBAAoB,yBACpBC,eAAgB,aAChBC,MAAO,OACPC,OAAQ,SAEZ,OACI,8BACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,eAAC,SAAD,CAAQC,cAtCpB,SAACC,EAAEC,GACXC,IAAMC,KAAKlB,EAASE,EAAUc,GAAGG,MAAK,SAAAC,GAClC,GAAiB,MAAbA,EAAIC,OAAa,CACjBC,IAAMC,QAAQ,WACdC,aAAaC,QAAQxB,EHZjB,UGYuCmB,EAAIM,MAC/C,IAAIC,EAAYC,YAAUR,EAAIM,MAC9B,EAAKG,MAAMC,OAAOH,EAAYI,MAAM,GAAGC,UACH,eAAhCL,EAAYI,MAAM,GAAGC,SACrB,EAAKH,MAAMI,QAAQC,KAAK,cAEa,iBAAhCP,EAAYI,MAAM,GAAGC,SAC1B,EAAKH,MAAMI,QAAQC,KAAK,YAEa,gBAAhCP,EAAYI,MAAM,GAAGC,SAC1B,EAAKH,MAAMI,QAAQC,KAAK,SAExB,EAAKL,MAAMI,QAAQC,KAAK,SAIjCC,OAAM,SAAAf,GACLE,IAAMc,MAAM,aAiBI,UACI,cAAC,UAAD,CAASC,KAAM,OAAQC,MAAO,oBAAqBC,KAAM,aACzD,cAAC,UAAD,CAASF,KAAM,WAAYC,MAAO,oBAAqBC,KAAM,aAC7D,wBAAQF,KAAM,SAAUxB,UAAW,uBAAnC,4BAKhB,qBAAKA,UAAU,WAAf,SACI,qBAAK2B,MAAOnC,e,GAjDboC,aAyDjBC,EAAY,CACdZ,OClEe,SAACE,GAChB,MAAO,CACHK,KAAKlC,EACLwC,QAAQX,KDkEDY,cAAQ,KAAKF,EAAbE,CAA0BxC,G,iCEpE5ByC,GAAQ,SAACC,EAAOC,EAAIrB,GAC7B,IACMsB,EAAQ,CACV,cAFQxB,aAAayB,QAAQhD,GAG7B,8BAA+B,KAEnC,OAAOgB,IAAM,CACT8B,IAAI/C,EAAS+C,EAAID,SAAOpB,OAAKsB,aCP/BE,G,8HAEF,2FACQC,EAAK,GADb,SAEUN,GAAQ,MAAM3C,GAAQiB,MAAK,SAAAC,GACjC+B,EAAM/B,EAAIM,QACPS,OAAM,SAAAf,GACL+B,EAAK,QALb,gCAOWA,GAPX,2C,2HAYA,WAA8BC,GAA9B,8EACQC,EAAS,GADjB,SAEUR,GAAQ,OAAO3C,EAAqBkD,GAAMjC,MAAK,SAAAC,GACjDiC,EAASjC,KACVe,OAAM,SAAAf,GACLiC,EAAS,MALjB,gCAOWA,GAPX,2C,mIASA,WAAqCC,GAArC,8EACQC,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,EAAyB,SAASoD,EAAOE,KAAK,SAASF,EAAOG,KAAK,WAAWH,EAAOI,OAAO,WAAWJ,EAAOK,OAAO,cAAcL,EAAOM,WAAWzC,MAAK,SAAAC,GAC1KmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,6HASA,2FACQA,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,GAAoBiB,MAAK,SAAAC,GACzCmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,wHASA,2FACQA,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,GAAgBiB,MAAK,SAAAC,GACrCmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,+HAUA,WAAkCM,GAAlC,8EACQC,EAAI,GADZ,SAEUjB,GAAQ,MAAM3C,EAAyB2D,GAAI1C,MAAK,SAAAC,GAClD0C,EAAK1C,EAAIM,QACVS,OAAM,SAAAf,GACL0C,EAAI,MALZ,gCAOWA,GAPX,2C,wHAUA,WAA0BD,GAA1B,8EACQC,EAAM,GADd,SAEUjB,GAAQ,MAAO3C,EAAmB2D,GAAI1C,MAAK,SAAAC,GAC7C0C,EAAM1C,EAAIM,QACXS,OAAM,SAAAf,GACL0C,EAAM,MALd,gCAOWA,GAPX,2C,4HASA,WAA8BD,GAA9B,8EACQC,EAAM,GADd,SAEUjB,GAAQ,MAAO3C,EAAuB2D,GAAI1C,MAAK,SAAAC,GACjD0C,EAAM1C,EAAIM,QACXS,OAAM,SAAAf,GACL0C,EAAM,MALd,gCAOWA,GAPX,2C,iIAWA,WAAmCR,GAAnC,8EACQS,EAAM,GADd,SAEUlB,GAAQ,MAAM3C,EAAuB,SAASoD,EAAOE,KAAK,SAASF,EAAOG,KAAK,WAAWH,EAAOI,OAAO,WAAWJ,EAAOK,OAAO,cAAcL,EAAOM,WAAWzC,MAAK,SAAAC,GACxK2C,EAAK3C,EAAIM,QACVS,OAAM,SAAAf,GACL2C,EAAI,MALZ,gCAOWA,GAPX,2C,yHASA,WAA2BX,GAA3B,8EACQC,EAAS,GADjB,SAEUR,GAAQ,OAAO3C,EAAkBkD,GAAMjC,MAAK,SAAAC,GAC9CiC,EAASjC,KACVe,OAAM,SAAAf,GACLiC,EAAS,MALjB,gCAOWA,GAPX,2C,6HASA,WAA+BQ,GAA/B,8EACQE,EAAI,GADZ,SAEUlB,GAAQ,MAAM3C,EAAsB2D,GAAI1C,MAAK,SAAAC,GAC/C2C,EAAK3C,EAAIM,QACVS,OAAM,SAAAf,GACL2C,EAAI,MALZ,gCAOWA,GAPX,2C,gIAWA,WAAkCX,GAAlC,8EACQC,EAAS,GADjB,SAEUR,GAAQ,OAAO3C,EAAyBkD,GAAMjC,MAAK,SAAAC,GACrDiC,EAASjC,KACVe,OAAM,SAAAf,GACLiC,EAAS,MALjB,gCAOWA,GAPX,2C,6HAUA,WAA+BD,GAA/B,8EACQC,EAAS,GADjB,SAEUR,GAAQ,OAAO3C,EAAsBkD,GAAMjC,MAAK,SAAAC,GAClDiC,EAASjC,KACVe,OAAM,SAAAf,GACLiC,EAAS,MALjB,gCAOWA,GAPX,2C,uIAUA,WAAyCC,GAAzC,8EACQC,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,EAA6B,SAASoD,EAAOE,KAAK,SAASF,EAAOG,KAAK,WAAWH,EAAOI,OAAO,WAAWJ,EAAOK,OAAO,cAAcL,EAAOM,WAAWzC,MAAK,SAAAC,GAC9KmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,qIAUA,WAAuCD,GAAvC,8EACQC,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,EAA2B,SAASoD,EAAOE,KAAK,SAASF,EAAOG,KAAK,WAAWH,EAAOI,OAAO,WAAWJ,EAAOK,OAAO,cAAcL,EAAOM,WAAWzC,MAAK,SAAAC,GAC5KmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,gIAWA,WAAkCD,GAAlC,8EACQC,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,EAAuB,cAAcoD,EAAOM,UAAU,iBAAiBN,EAAOU,cAAc7C,MAAK,SAAAC,GACjHmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,6HAUA,WAA+BD,GAA/B,8EACQC,EAAS,GADjB,SAEUV,GAAQ,MAAM3C,EAAmB,cAAcoD,EAAOM,WAAWzC,MAAK,SAAAC,GACxEmC,EAAQnC,EAAIM,QACbS,OAAM,SAAAf,GACLmC,EAAO,MALf,gCAOWA,GAPX,2C,iIAWA,WAAmCD,GAAnC,8EACQW,EAAW,GADnB,SAEUpB,GAAQ,MAAM3C,EAAuB,SAASoD,EAAOE,KAAK,SAASF,EAAOG,KAAK,WAAWH,EAAOI,QAAQvC,MAAK,SAAAC,GAChH6C,EAAY7C,EAAIM,QACjBS,OAAM,SAAAf,GACL6C,EAAW,MALnB,gCAOWA,GAPX,2C,8HAWA,WAAgCJ,GAAhC,8EACQK,EAAM,GADd,SAEUrB,GAAQ,MAAM3C,EAAuB2D,GAAI1C,MAAK,SAAAC,GAChD8C,EAAO9C,EAAIM,QACZS,OAAM,SAAAf,GACL8C,EAAM,MALd,gCAOWA,GAPX,2C,0HAUA,WAA4Bd,GAA5B,8EACQC,EAAS,GADjB,SAEUR,GAAQ,OAAO3C,EAAmBkD,GAAMjC,MAAK,SAAAC,GAC/CiC,EAASjC,KACVe,OAAM,SAAAf,GACLiC,EAAS,MALjB,gCAOWA,GAPX,2C,sHAcA,WAAwBQ,GAAxB,8EACQV,EAAK,GADb,SAEUN,GAAQ,MAAM3C,EAAgB2D,GAAI1C,MAAK,SAAAC,GACzC+B,EAAM/B,EAAIM,QACXS,OAAM,SAAAf,GACL+B,EAAK,MALb,gCAOWA,GAPX,2C,uHAYA,2FACQgB,EAAK,GADb,SAEUtB,GAAQ,MAAM3C,GAAciB,MAAK,SAAAC,GACnC+C,EAAM/C,EAAIM,QACXS,OAAM,SAAAf,GACL+C,EAAK,MALb,gCAOWA,GAPX,2C,6DAYWjB,MCvOFkB,GAAmB,WAC5B,OAAI5C,aAAayB,QAAQhD,GACD2B,YAAUJ,aAAayB,QAAQhD,IAChC8B,MAAM,GAAGC,SAErB,IC2BAqC,GA7BA,SAACxC,GAIZ,OAAO,qBAAKhB,UAAW,UAAhB,SACH,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SAEgC,eAAxBuD,KACI,qBAAKvD,UAAW,kEAAhB,SACI,sBAAKA,UAAU,aAAf,UACI,mBAAGyD,KAAM,aAAczD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAAtF,uBACA,mBAAGW,KAAM,UAAWzD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAAnF,oBACA,mBAAGW,KAAM,OAAQzD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAAhF,iBACA,mBAAGW,KAAM,WAAYzD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAApF,qBACA,mBAAGW,KAAM,cAAezD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAAvF,wBACA,mBAAGW,KAAM,YAAazD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAArF,sBACA,mBAAGW,KAAM,WAAYzD,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAApF,qBACA,mBAAGW,KAAM,IAAKC,QAjBzB,WACb/C,aAAagD,WAAWvE,IAgBiCY,UAA4B,IAAjBgB,EAAM8B,OAAc,gCAAgC,yBAAhG,uBAIR,U,oBClBlBc,I,yDAEF,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAQ,CACTC,SAAU,GACVhB,QAAQ,EACRiB,QAAS,GACTrB,OAAQ,GACRsB,cAAe,GACfC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,IAAK,GACLC,KAAM,GACN1B,KAAM,EACNC,KAAM,GACN0B,cAAe,EACfC,UAAW,GAhBA,E,qDAqBnB,WAAqB,IAAD,OAChBlC,GAAamC,KAAKlE,MAAK,SAAAC,GACP,OAARA,GAAyC,eAAzBgD,MAChB5C,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,MAExBgB,GAAaoC,gBAAgBnE,MAAK,SAAAC,GAC9BmE,QAAQC,IAAIpE,EAAK,WACjB,EAAKqE,SAAS,CACVb,QAASxD,IAEb,EAAKsD,MAAME,QAAQc,KAAI,SAACtC,EAAMuC,GAAP,OACnBzC,GAAa0C,kBAAkB,CAC3BhC,UAAWR,EAAKS,KACjB1C,MAAK,SAAAC,GACJmE,QAAQC,IAAIpE,EAAK,QACM,oBAAnBgC,EAAKyC,WACLN,QAAQC,IAAIpE,EAAI0E,OAAOrC,KAAM,SAE7B,EAAKgC,SAAS,CAACV,MAAO3D,EAAI0E,OAAOC,UACP,uBAAnB3C,EAAKyC,UACZ,EAAKJ,SAAS,CAACR,IAAK7D,EAAI0E,OAAOC,SACL,mBAAnB3C,EAAKyC,UACZ,EAAKJ,SAAS,CAACP,KAAM9D,EAAI0E,OAAOC,SACN,gBAAnB3C,EAAKyC,WACZ,EAAKJ,SAAS,CAACT,MAAO5D,EAAI0E,OAAOC,uB,oBAW7D,WAGI,IAwFMC,EAAY,CACdtE,KAzFY,CACZ,CACIW,KAAM,YACN4D,MAAOC,KAAKxB,MAAMK,OAEtB,CACI1C,KAAM,YACN4D,MAAOC,KAAKxB,MAAMM,OAEtB,CACI3C,KAAM,WACN4D,MAAOC,KAAKxB,MAAMQ,MAEtB,CACI7C,KAAM,eACN4D,MAAOC,KAAKxB,MAAMO,MA2EtBkB,OAAQ,OACRC,OAAQ,QACR9D,MAAO,CACH+D,SAAU,SACV7D,MAAO,CACH8D,gBAAiB,wBAGzBC,KAAM,CACFlE,KAAM,CAACmE,MAAO,YACdP,MAAO,CAACO,MAAO,WAGnBC,EAAU,CACVC,cAAe,GACfhF,KAtFa,CACb,CACIW,KAAM,YACNsE,MAAOT,KAAKxB,MAAMU,WAEtB,CACI/C,KAAM,YACNsE,MAAO,GAEX,CACItE,KAAM,aACNsE,MAAO,GAEX,CACItE,KAAM,aACNsE,MAAO,GAEX,CACItE,KAAM,QACNsE,MAAO,GAEX,CACItE,KAAM,SACNsE,MAAO,GAEX,CACItE,KAAM,WACNsE,MAAO,GAEX,CACItE,KAAM,WACNsE,MAAO,GAEX,CACItE,KAAM,SACNsE,MAAO,GAEX,CACItE,KAAM,QACNsE,MAAO,GAEX,CACItE,KAAM,UACNsE,MAAO,GAEX,CACItE,KAAM,WACNsE,MAAO,GAEX,CACItE,KAAM,aACNsE,MAAO,GAEX,CACItE,KAAM,aACNsE,MAAO,GAEX,CACItE,KAAM,kBACNsE,MAAO,GAEX,CACItE,KAAM,SACNsE,MAAO,IAwBXC,WAAY,QACZC,WAAY,OACZC,OAAQ,EACRxE,MAAO,CAACD,KAAM,SACd0E,aAAc,CAAC,CAAC1E,KAAM,oBAI1B,OACI,sBAAKxB,UAAU,eAAf,UACI,cAAC,GAAD,CAAQ8C,OAAQ,IAEhB,sBAAK9C,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,iBACA,cAAC,KAAD,2BACQmF,GADR,IAEIgB,QAAS,SAACC,GACNA,EAAKC,GAAG,cAAc,SAACC,GACnB,IAAOC,EAAQD,EAARC,EAAGC,EAAKF,EAALE,EACOJ,EAAKK,QAAfnB,OACac,EAAKM,MAAMC,gBAAgB,CAACJ,IAAGC,gBAKnE,sBAAKxG,UAAU,gBAAf,UACI,oBAAIA,UAAW,mBAAf,mBACA,cAAC,KAAD,eAAS4F,IAFb,c,GAjMQhE,cAgNTG,gBALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGmB,KAAnB7E,CAAyB6B,I,sECqIzBiD,G,kDAnVX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAQ,CACTtB,KAAM,GACNuE,eAAe,EACfC,iBAAiB,EACjBC,WAAY,GACZlE,QAAQ,EACRmE,qBAAsB,GACtBlD,QAAS,GACThB,UAAU,GACVL,OAAO,GACPwE,UAAU,GACVC,WAAY,GACZxE,KAAM,EACNC,KAAM,GACN0B,cAAe,GAhBJ,E,qDAoBnB,WAAqB,IAAD,OAChBjC,GAAamC,KAAKlE,MAAK,SAAAC,GACP,OAARA,GACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,OAExBgB,GAAa+E,0BAA0B,CACnCzE,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJmE,QAAQC,IAAIpE,GACZ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,mBAG3BjC,GAAaoC,gBAAgBnE,MAAK,SAAAC,GAC9BmE,QAAQC,IAAIpE,EAAK,WACjB,EAAKqE,SAAS,CACVb,QAASxD,a,oBAS7B,WAAU,IAAD,OACC8G,EAAsB,SAAC9E,GACzB,EAAKqC,SAAS,CACVrC,OACA+E,qBAAsB,EAAKzD,MAAMyD,uBAGnCC,EAAkB,SAAChF,GACrB,EAAKqC,SAAS,CACVrC,OACAwE,iBAAkB,EAAKlD,MAAMkD,mBA6IrC,OACI,sBAAK/G,UAAU,eAAf,UACI,cAAC,GAAD,CAAQ8C,OAAQ,IAChB,sBAAK9C,UAAU,SAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wBAAQA,UAAW,kBAAmB0D,QAAS,kBAAM2D,EAAoB,KAAzE,oBAEJ,qBAAKrH,UAAU,QAAf,SACI,uBAAOwB,KAAK,OAAOgG,SArFxB,SAACtH,GACZ,IAAIuH,EAAIvH,EAAEwH,OAAO5B,MACjBpB,QAAQC,IAAI8C,EAAEvC,OAAQ,OAClBuC,EAAEvC,QAAU,EACZ7C,GAAa+E,0BAA0B,CACnCzE,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ4E,EACR3E,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAM,OAIdN,GAAa+E,0BAA0B,CACnCzE,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAM,QAyDmC3C,UAAW,mBAEpD,qBAAKA,UAAU,QAAf,SACI,cAAC,KAAD,CACI2H,WAAYtC,KAAKxB,MAAMlB,KAAO,EAC9BiF,kBAAmBvC,KAAKxB,MAAMjB,KAC9BiF,gBAAiBxC,KAAKxB,MAAMS,cAC5BwD,mBAAoB,EACpBN,SA3CC,SAACO,GACtB1F,GAAa+E,0BAA0B,CACnCzE,KAAMoF,EAAa,EACnBnF,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAMoF,EAAa,QAiCPC,UAAU,YACVC,UAAU,gBAGlB,qBAAKjI,UAAU,QAAf,SACI,qBAAKA,UAAU,wDAAf,SACI,yBAAQA,UAAU,oBAAoBwH,SAnEtC,SAACtH,GACrB,IAAIuH,EAAIvH,EAAEwH,OAAO5B,MACjBpB,QAAQC,IAAI8C,EAAG,kBAEfpF,GAAa+E,0BAA0B,CACnCzE,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW0E,IACZnH,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,oBAuDCtB,GAAG,4BADX,UAEI,wBAAQ8C,MAAO,EAAf,4BAEIT,KAAKxB,MAAME,QAAQc,KAAI,SAACtC,EAAMuC,GAAP,OACnB,wBAAQgB,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,yBAOtD,qBAAKhF,UAAU,WAAf,SAEI,eAACkI,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACA,+BACI,qCACA,sCACA,gDACA,gDACA,yCACA,0CACA,yCACA,6CAIJ,gCAEI/C,KAAKxB,MAAMoD,qBACP5B,KAAKxB,MAAMoD,qBAAqBpC,KAAI,SAACtC,EAAMuC,GAAP,OAChC,+BACI,oBAAI9E,UAAW,cAAf,SAA+B8E,EAAQ,EAAK,EAAKjB,MAAMlB,KAAO,EAAKkB,MAAMjB,OACzE,oBAAI5C,UAAW,cAAf,SAA+BuC,EAAK8F,WACpC,oBAAIrI,UAAW,cAAf,SAA+BuC,EAAK+F,YACpC,oBAAItI,UAAW,cAAf,SAA+BuC,EAAKgG,OACpC,oBAAIvI,UAAW,cAAf,SAA+BuC,EAAKwB,QAAQiB,YAC5C,oBAAIhF,UAAW,cAAf,SAA+BuC,EAAKiG,SAASC,YAE7C,oBAAIzI,UAAW,kBAAf,SAAmCuC,EAAKmG,KAAMnG,EAAKmG,KAAK7D,KAAI,SAAC8D,EAAGxI,GAAJ,OACxD,mBAAGH,UAAW,OAAd,SAAuB2I,EAAEC,eAC3B,KACF,6BACI,wBAAQ5I,UAAW,kBAAmB0D,QAAS,kBAAI2D,EAAoB9E,IAAvE,0BAKZ,UAOhB,eAACsG,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMyD,oBAAqByB,OAAQ,kBAAM1B,EAAoB,KAAjF,UACI,eAAC2B,GAAA,EAAD,WACI,6BAAK3D,KAAKxB,MAAMtB,KAAO,aAAe,kBACtC,eAAC,SAAD,CAAQtC,cA9FlB,SAACC,EAAEC,GAETkC,GAAa0C,kBAAkB,CAC3BhC,UAAW5C,EAAE4C,YACdzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACV7B,UAAU5C,EAAE4C,UACZL,OAAOnC,EAAI0E,aAuFH,UACI,eAAC,UAAD,CAASzD,KAAM,SAAUE,KAAM,YAAaD,MAAO,kBAAnD,UACI,wBAAQqE,MAAM,IAAd,4BAEIT,KAAKxB,MAAME,QAAQmB,OAAS,EACxBG,KAAKxB,MAAME,QAAQc,KAAI,SAAAtC,GAAI,OACnB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,eAElC,MAGhB,wBAAQhF,UAAW,mCAAoCwB,KAAM,SAA7D,6BAIR,eAAC,SAAD,CAAQvB,cA5OJ,SAACC,EAAGC,GACpBA,EAAC,2BAAOA,GAAP,IAAS4C,UAAU,EAAKc,MAAMd,YAC/B2B,QAAQC,IAAIxE,EAAE,SACdkC,GAAa4G,kBAAkB9I,GAAGG,MAAK,SAAAC,GACnCmE,QAAQC,IAAIpE,EAAI,UAMhB8B,GAAa+E,0BAA0B,CACnCzE,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,mBAG3BjC,GAAa+E,0BAA0B,CACnCzE,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EACNC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVoC,WAAYzG,EAAI0E,OAChBX,cAAe/D,EAAI+D,mBAG3B+C,EAAoB,QA0MZ,UACI,eAAC2B,GAAA,EAAD,WACI,cAAC,UAAD,CAASxH,KAAM,SAAUE,KAAM,SAAUwH,UAAQ,EACxCzH,MAAO,gBADhB,SAGQ4D,KAAKxB,MAAMnB,OAAOwC,OAAS,EACvBG,KAAKxB,MAAMnB,OAAOmC,KAAI,SAAAtC,GAAI,OAClB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKqG,eAElC,KAGhB,cAAC,UAAD,CAASpH,KAAM,OAAQE,KAAM,YAAayH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK+F,UAAU,GAAK7G,MAAO,8BAC9G,cAAC,UAAD,CAASD,KAAM,OAAQE,KAAM,WAAYyH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK8F,SAAS,GAAI5G,MAAO,+BAG/G,eAAC2H,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAM2D,EAAoB,KAChE7F,KAAM,SADd,0BAGA,wBAAQxB,UAAW,kBAAmBwB,KAAM,SAA5C,8BAIZ,eAACqH,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMkD,gBAAiBgC,OAAQ,kBAAMxB,EAAgB,KAAzE,UACI,cAAC8B,GAAA,EAAD,sCACA,eAACD,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAM6D,EAAgB,KAC5D/F,KAAM,SADd,0BAGA,wBAAQxB,UAAW,kBAAmB0D,QArO3C,WACXrB,GAAaiH,iBAAiB,GAAGhJ,MAAK,SAAAC,GAClCmE,QAAQC,IAAIpE,GACRA,EAAIG,QACJD,IAAMC,QAAQH,EAAIgJ,SAElB9I,IAAM+I,QAAQjJ,EAAIgJ,SAEtBlH,GAAaoH,wBAAwB,CACjC9G,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAM,EACNoE,iBAAkB,EAAKlD,MAAMkD,gBAC7BxE,KAAM,YAiNF,uC,GA5ULX,a,UCRjB8H,GAAa,CACfC,SAAS,IAQEC,GANJ,WAA8B,IAA7B/F,EAA4B,uDAAtB6F,GAAaG,EAAS,uCACpC,OAAQA,EAAOrI,OACNlC,EAAe,2BAAIuE,GAAX,IAAiB8F,SAAUE,EAAO/H,UAChC+B,G,qBCKjBiG,G,kDAEF,WAAY9I,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAM,CACPtB,KAAK,GACLuE,eAAc,EACdC,iBAAgB,EAChBC,WAAW,GACXlE,QAAO,EACPmE,qBAAqB,GACrBlD,QAAQ,GACRoD,WAAW,GACXxE,KAAK,EACLC,KAAK,GACL0B,cAAc,GAbH,E,qDAiBnB,WAAqB,IAAD,OAChBjC,GAAamC,KAAKlE,MAAK,SAAAC,GACT,OAANA,GACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,OAExBgB,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACrImE,QAAQC,IAAIpE,GACZ,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,mBAG1BjC,GAAa0H,oBAAoBzJ,MAAK,SAAAC,GAClCmE,QAAQC,IAAIpE,EAAI,WAChB,EAAKqE,SAAS,CACVuC,WAAW5G,OAGnB8B,GAAaoC,gBAAgBnE,MAAK,SAAAC,GAC9BmE,QAAQC,IAAIpE,EAAI,WAChB,EAAKqE,SAAS,CACVb,QAAQxD,a,oBAO5B,WAAU,IAAD,OAEC8G,EAAoB,SAAC9E,GACvB,EAAKqC,SAAS,CACVrC,OACA+E,qBAAqB,EAAKzD,MAAMyD,uBAGlCC,EAAgB,SAAChF,GACnB,EAAKqC,SAAS,CACVrC,OACAwE,iBAAiB,EAAKlD,MAAMkD,mBAqHpC,OACI,sBAAK/G,UAAU,eAAf,UACY,cAAC,GAAD,CAAQ8C,OAAQ,IACxB,sBAAK9C,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wBAAQA,UAAW,kBAAmB0D,QAAS,kBAAI2D,EAAoB,KAAvE,mBAEJ,qBAAKrH,UAAU,QAAf,SACI,uBAAOwB,KAAK,OAAOgG,SAlD1B,SAACtH,GACV,IAAIuH,EAAGvH,EAAEwH,OAAO5B,MAChBpB,QAAQC,IAAI8C,EAAEvC,OAAO,OACjBuC,EAAEvC,QAAQ,EACV7C,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO4E,EAAE3E,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACjI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,cAClB3B,KAAK,OAIbN,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACrI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,cAClB3B,KAAK,QAkCoC3C,UAAW,mBAEpD,qBAAKA,UAAU,QAAf,SACI,cAAC,KAAD,CACI2H,WAAYtC,KAAKxB,MAAMlB,KAAO,EAC9BiF,kBAAmBvC,KAAKxB,MAAMjB,KAC9BiF,gBAAiBxC,KAAKxB,MAAMS,cAC5BwD,mBAAoB,EACpBN,SAnED,SAACO,GACpB1F,GAAaoH,wBAAwB,CAAC9G,KAAKoF,EAAW,EAAEnF,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GAClI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,cAClB3B,KAAKoF,EAAW,QA+DJC,UAAU,YACVC,UAAU,gBAGlB,qBAAKjI,UAAU,QAAf,SACI,sBAAKA,UAAU,wDAAf,UACI,yBAAQA,UAAU,oBAAoBwH,SA5CxC,SAACtH,GACnB,IAAIuH,EAAGvH,EAAEwH,OAAO5B,MAChBpB,QAAQC,IAAI8C,EAAE,kBACdpF,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU0E,IAAInH,MAAK,SAAAC,GACrI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,oBAsC2DtB,GAAG,4BAApE,UACI,wBAAQ8C,MAAO,EAAf,4BAEIT,KAAKxB,MAAME,QAAQc,KAAI,SAACtC,EAAMuC,GAAP,OACnB,wBAAQgB,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,kBAI1C,uBAAOxD,KAAK,WAAWxB,UAAW,mBAAoB0D,QAzCjE,WACT,EAAKkB,SACD,CACI9B,QAAQ,EAAKe,MAAMf,UAsCgEkH,QAAS3E,KAAKxB,MAAMf,iBAKvG,qBAAK9C,UAAU,WAAf,SAEI,eAACkI,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACA,+BACI,qCACA,oCACA,8CACA,8CACA,yCACA,sCACA,wCACA,6CAIJ,gCAEI/C,KAAKxB,MAAMoD,qBACP5B,KAAKxB,MAAMoD,qBAAqBpC,KAAI,SAACtC,EAAKuC,GAAN,OAChC,+BACI,6BAAKA,EAAM,EAAG,EAAKjB,MAAMlB,KAAK,EAAKkB,MAAMjB,OACzC,6BAAKL,EAAK0H,eACV,6BAAK1H,EAAKgG,OACV,6BAAKhG,EAAK2H,iBACV,6BAAK3H,EAAKwB,QAAQoG,cAClB,6BAAK5H,EAAKb,OACV,mCAAK,cAAC,KAAD,CAAQsI,QAASzH,EAAKO,OAAQ0E,SAAU,kBAnI5D,SAACjF,GAClBF,GAAa+H,qBAAqB7H,EAAKS,IAAI1C,MAAK,SAAAC,GAC1B,cAAdA,EAAIgJ,QACJ9I,IAAMC,QAAQH,EAAIgJ,SAGlB9I,IAAM+I,QAAQjJ,EAAIgJ,SAEtBlH,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACrI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,sBAwHmD+F,CAAa9H,SAE9D,+BACI,wBAAQvC,UAAW,kBAAmB0D,QAAS,kBAAI2D,EAAoB9E,IAAvE,kBACA,wBAAQvC,UAAW,iBAAkB0D,QAAS,kBAAI6D,EAAgBhF,IAAlE,6BAKZ,UAOhB,eAACsG,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMyD,oBAAqByB,OAAQ,kBAAI1B,EAAoB,KAA/E,UACI,cAACgC,GAAA,EAAD,UAAa,6BAAKhE,KAAKxB,MAAMtB,KAAK,aAAa,4BAC/C,eAAC,SAAD,CAAQtC,cApMP,SAACC,EAAEC,GACZ,EAAK0D,MAAMtB,OACXpC,EAAE,2BAAIA,GAAL,IAAO6C,GAAG,EAAKa,MAAMtB,KAAKS,MAE/BX,GAAaiI,iBAAiBnK,GAAGG,MAAK,SAAAC,GAClCmE,QAAQC,IAAIpE,EAAI,QACZA,EAAIM,KAAKH,QACTD,IAAMC,QAAQH,EAAIM,KAAK0I,SAGvB9I,IAAM+I,QAAQjJ,EAAIM,KAAK0I,SAE3BlH,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACrI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,mBAG1BjC,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAEC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACvH,EAAKqE,SAAS,CACVoC,WAAWzG,EAAI0E,OACfX,cAAc/D,EAAI+D,mBAG1B+C,EAAoB,QA4KZ,UACI,eAAC2B,GAAA,EAAD,WAEI,cAAC,UAAD,CAASxH,KAAM,OAAQE,KAAM,eAAgByH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK0H,aAAa,GAAIxI,MAAO,+BAClH4D,KAAKxB,MAAMtB,KAAK,GACb,cAAC,UAAD,CAASf,KAAM,OAAQE,KAAM,gBAAkBD,MAAO,+BAE1D,cAAC,UAAD,CAASD,KAAM,OAAQE,KAAM,iBAAkByH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK2H,eAAe,GAAIzI,MAAO,8BACvH,eAAC,UAAD,CAASD,KAAM,SAAUE,KAAM,YAAayH,aAAc9D,KAAKxB,MAAMtB,MAAK8C,KAAKxB,MAAMtB,KAAKwB,QAAQsB,KAAKxB,MAAMtB,KAAKwB,QAAQf,GAAO,IAAMvB,MAAO,kBAA9I,UACI,wBAAQqE,MAAM,IAAd,4BAEIT,KAAKxB,MAAME,QAAQmB,OAAO,EACtBG,KAAKxB,MAAME,QAAQc,KAAI,SAAAtC,GAAI,OACvB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,eAEhC,MAGd,eAAC,UAAD,CAASxD,KAAM,SAAUE,KAAM,eAAgByH,aAAc9D,KAAKxB,MAAMtB,MAAK8C,KAAKxB,MAAMtB,KAAK4E,WAAW9B,KAAKxB,MAAMtB,KAAK4E,WAAWnE,GAAO,IAAKvB,MAAO,wBAAtJ,UACI,wBAAQqE,MAAM,IAAd,yBAEIT,KAAKxB,MAAMsD,WAAWjC,OAAO,EACzBG,KAAKxB,MAAMsD,WAAWtC,KAAI,SAAAtC,GAAI,OACtB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,eAEpC,SAKlB,eAACoE,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAI2D,EAAoB,KAAK7F,KAAM,SAAjF,0BACA,wBAAQxB,UAAW,kBAAmBwB,KAAM,SAA5C,8BAIZ,eAACqH,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMkD,gBAAiBgC,OAAQ,kBAAIxB,EAAgB,KAAvE,UACI,cAAC8B,GAAA,EAAD,sCACA,eAACD,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAI6D,EAAgB,KAAK/F,KAAM,SAA7E,0BACA,wBAAQxB,UAAW,kBAAmB0D,QAjN7C,WACTrB,GAAakI,aAAa,EAAK1G,MAAMtB,KAAKS,IAAI1C,MAAK,SAAAC,GAC/CmE,QAAQC,IAAIpE,GACRA,EAAIG,QACJD,IAAMC,QAAQH,EAAIgJ,SAGlB9I,IAAM+I,QAAQjJ,EAAIgJ,SAEtBlH,GAAaoH,wBAAwB,CAAC9G,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACrI,EAAKqE,SAAS,CACVqC,qBAAqB1G,EAAI0E,OACzBX,cAAc/D,EAAI+D,cAClB3B,KAAK,EACLoE,iBAAiB,EAAKlD,MAAMkD,gBAC5BxE,KAAK,YAkMD,uC,GA1SPX,aAuTNG,gBALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGkB,KAAlB7E,CAAwB+H,IC5TjCU,G,uKACF,WAAqB,IAAD,OAChBnI,GAAamC,KAAKlE,MAAK,SAAAC,GACT,OAANA,IACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,W,oBAKpC,WACI,OACI,sBAAKrB,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,GAAD,CAAQ8C,OAAQ,MAEpB,qBAAK9C,UAAU,YAAf,SACI,gE,GAjBG4B,aCAjB6I,ID4BS1I,aALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGkB,KAAlB7E,CAAwByI,I,uKC3BnC,WAAqB,IAAD,OAChBnI,GAAamC,KAAKlE,MAAK,SAAAC,GACT,OAANA,IACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,W,oBAKpC,WACI,OACI,sBAAKrB,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,GAAD,CAAQ8C,OAAQ,MAEpB,qBAAK9C,UAAU,YAAf,SACI,iE,GAjBI4B,cCAlB8I,ID4BS3I,aALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGkB,KAAlB7E,CAAwB0I,I,uKC3BnC,WAAqB,IAAD,OAChBpI,GAAamC,KAAKlE,MAAK,SAAAC,GACT,OAANA,IACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,W,oBAKpC,WACI,OACI,sBAAKrB,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,GAAD,CAAQ8C,OAAQ,MAEpB,qBAAK9C,UAAU,YAAf,SACI,gE,GAjBG4B,cA4BRG,aALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGkB,KAAlB7E,CAAwB2I,IC5BxBC,OANf,WACI,OAAO,qBAAK3K,UAAU,aCSpB4K,G,kDAEF,WAAY5J,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAQ,CACTtB,KAAM,GACNsI,SAAQ,EACR/D,eAAe,EACfC,iBAAiB,EACjBjD,SAAU,GACVhB,QAAQ,EACRgI,mBAAoB,GACpB/G,QAAS,GACTpB,KAAM,EACNC,KAAM,GACN0B,cAAe,GAbJ,E,qDAkBnB,WAAqB,IAAD,OAChBe,KAAKT,SAAS,CACViG,SAAQ,IAEZxI,GAAamC,KAAKlE,MAAK,SAAAC,GACP,OAARA,GACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,OAExBgB,GAAa0I,sBAAsB,CAC/BpI,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJmE,QAAQC,IAAIpE,GACZ,EAAKqE,SAAS,CACVkG,mBAAoBvK,EAAI0E,OACxBX,cAAe/D,EAAI+D,mBAGtB0G,SAAQ,kBACT,EAAKpG,SAAS,CACViG,SAAQ,OAehBxI,GAAaoC,gBAAgBnE,MAAK,SAAAC,GAC9B,EAAKqE,SAAS,CACVb,QAASxD,a,oBAO7B,WAAU,IAAD,OAEC8G,EAAsB,SAAC9E,GACzB,EAAKqC,SAAS,CACVrC,OACA+E,qBAAsB,EAAKzD,MAAMyD,uBAgHzC,OAAGjC,KAAKxB,MAAMgH,QACH,cAAC,GAAD,IAIP,sBAAK7K,UAAU,eAAf,UACI,cAAC,GAAD,CAAQ8C,OAAQ,IAChB,sBAAK9C,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBAAQA,UAAW,oBAAqB0D,QAAS,kBAAM2D,EAAoB,KAA3E,mBAEJ,qBAAKrH,UAAU,QAAf,SACI,uBAAOwB,KAAK,OAAOyJ,YAAa,SAAUzD,SA/EjD,SAACtH,GACV,IAAIuH,EAAGvH,EAAEwH,OAAO5B,MAChBpB,QAAQC,IAAI8C,EAAEvC,OAAO,OACjBuC,EAAEvC,QAAQ,EACV7C,GAAa0I,sBAAsB,CAACpI,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO4E,EAAE3E,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GAC/H,EAAKqE,SAAS,CACVkG,mBAAmBvK,EAAI0E,OACvBX,cAAc/D,EAAI+D,cAClB3B,KAAK,OAIbN,GAAa0I,sBAAsB,CAACpI,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACnI,EAAKqE,SAAS,CACVkG,mBAAmBvK,EAAI0E,OACvBX,cAAc/D,EAAI+D,cAClB3B,KAAK,QA+D2D3C,UAAW,qBAE3E,qBAAKA,UAAU,QAAf,SACI,cAAC,KAAD,CACI2H,WAAYtC,KAAKxB,MAAMlB,KAAO,EAC9BiF,kBAAmBvC,KAAKxB,MAAMjB,KAC9BiF,gBAAiBxC,KAAKxB,MAAMS,cAC5BwD,mBAAoB,EACpBN,SA/BD,SAACO,GACpB1F,GAAa0I,sBAAsB,CAACpI,KAAKoF,EAAW,EAAEnF,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GAChI,EAAKqE,SAAS,CACVkG,mBAAmBvK,EAAI0E,OACvBX,cAAc/D,EAAI+D,cAClB3B,KAAKoF,EAAW,QA2BJC,UAAU,YACVC,UAAU,gBAGlB,qBAAKjI,UAAU,QAAf,SACI,sBAAKA,UAAU,wDAAf,UACI,yBAAQA,UAAU,sBAAsBwH,SAzE1C,SAACtH,GACnB,IAAIuH,EAAGvH,EAAEwH,OAAO5B,MAChBpB,QAAQC,IAAI8C,EAAE,kBACdpF,GAAa0I,sBAAsB,CAACpI,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU0E,IAAInH,MAAK,SAAAC,GACnI,EAAKqE,SAAS,CACVkG,mBAAmBvK,EAAI0E,OACvBX,cAAc/D,EAAI+D,cAClB3B,KAAK,QAkE0EK,GAAG,4BAAtE,UACI,wBAAQ8C,MAAO,EAAf,4BAEIT,KAAKxB,MAAME,QAAQc,KAAI,SAACtC,EAAMuC,GAAP,OACnB,wBAAQgB,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,kBAI1C,uBAAOxD,KAAK,WAAWxB,UAAW,qBAAsB0D,QAtEnE,WACT,EAAKkB,SACD,CACI9B,QAAQ,EAAKe,MAAMf,UAmEkEkH,QAAS3E,KAAKxB,MAAMf,iBAKzG,qBAAK9C,UAAU,WAAf,SAEI,eAACkI,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACA,+BACI,qCACA,oCACA,8CACA,8CACA,yCACA,sCACA,wCACA,6CAIJ,gCAEI/C,KAAKxB,MAAMiH,mBACPzF,KAAKxB,MAAMiH,mBAAmBjG,KAAI,SAACtC,EAAKuC,GAAN,OAC9B,+BACI,6BAAKA,EAAM,EAAG,EAAKjB,MAAMlB,KAAK,EAAKkB,MAAMjB,OACzC,6BAAKL,EAAKqG,YACV,6BAAKrG,EAAK2I,WACV,6BAAK3I,EAAK2H,iBACV,6BAAK3H,EAAKwB,QAAQoG,cAClB,6BAAK5H,EAAK4I,OACV,mCAAK,cAAC,KAAD,CAAQnB,QAASzH,EAAKO,OAAQ0E,SAAU,kBA/F5D,SAACjF,GAClBF,GAAa+I,kBAAkB7I,EAAKS,IAAI1C,MAAK,SAAAC,GACvB,cAAdA,EAAIgJ,QACJ9I,IAAMC,QAAQH,EAAIgJ,SAGlB9I,IAAM+I,QAAQjJ,EAAIgJ,SAEtBlH,GAAa0I,sBAAsB,CAACpI,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,MAAMC,OAAO,EAAKe,MAAMf,OAAOC,UAAU,IAAIzC,MAAK,SAAAC,GACnI,EAAKqE,SAAS,CACVkG,mBAAmBvK,EAAI0E,OACvBX,cAAc/D,EAAI+D,sBAoFmD+F,CAAa9H,SAE9D,+BACI,wBAAQvC,UAAW,kBAAmB0D,QAAS,kBAAI2D,EAAoB9E,IAAvE,kBACA,wBAAQvC,UAAW,iBAAkB0D,QAAS,kBArL9D,SAACnB,GACrB,EAAKqC,SAAS,CACVrC,OACAwE,iBAAkB,EAAKlD,MAAMkD,kBAkLqDQ,CAAgBhF,IAAlE,6BAKZ,UAOhB,eAACsG,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMyD,oBAAqByB,OAAQ,kBAAI1B,EAAoB,KAA/E,UACI,cAACgC,GAAA,EAAD,UAAa,6BAAKhE,KAAKxB,MAAMtB,KAAK,aAAa,yBAC/C,eAAC,SAAD,CAAQtC,cA7LL,SAACC,EAAGC,GACf,EAAK0D,MAAMtB,OACXpC,EAAC,2BAAOA,GAAP,IAAU6C,GAAI,EAAKa,MAAMtB,KAAKS,MAEnCX,GAAagJ,cAAclL,GAAGG,MAAK,SAAAC,GAC3BA,EAAIM,KAAKH,QACTD,IAAMC,QAAQH,EAAIM,KAAK0I,SAEvB9I,IAAM+I,QAAQjJ,EAAIM,KAAK0I,SAE3BlH,GAAa0I,sBAAsB,CAC/BpI,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVkG,mBAAoBvK,EAAI0E,OACxBX,cAAe/D,EAAI+D,mBAG3BjC,GAAa0I,sBAAsB,CAC/BpI,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EACNC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVd,SAAUvD,EAAI0E,OACdX,cAAe/D,EAAI+D,mBAG3B+C,EAAoB,QA2JZ,UACI,eAAC2B,GAAA,EAAD,WAEI,cAAC,UAAD,CAASxH,KAAM,SAAUE,KAAM,YAAayH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAKqG,UAAU,GAAInH,MAAO,4BAC9G4D,KAAKxB,MAAMtB,KAAK,GACb,cAAC,UAAD,CAASf,KAAM,SAAUE,KAAM,aAAeD,MAAO,4BAEzD,cAAC,UAAD,CAASD,KAAM,SAAUE,KAAM,OAAQyH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK4I,KAAK,GAAI1J,MAAO,yBACrG,cAAC,UAAD,CAASD,KAAM,OAAQE,KAAM,iBAAkByH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK2H,eAAe,GAAKzI,MAAO,8BACxH,eAAC,UAAD,CAASD,KAAM,SAAUE,KAAM,YAAayH,aAAc9D,KAAKxB,MAAMtB,MAAK8C,KAAKxB,MAAMtB,KAAKwB,QAAQsB,KAAKxB,MAAMtB,KAAKwB,QAAQf,GAAO,IAAMvB,MAAO,kBAA9I,UACI,wBAAQqE,MAAM,IAAd,4BAEIT,KAAKxB,MAAME,QAAQmB,OAAO,EACtBG,KAAKxB,MAAME,QAAQc,KAAI,SAAAtC,GAAI,OACnB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,eAEpC,SAIlB,eAACoE,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAI2D,EAAoB,KAAK7F,KAAM,SAAjF,0BACA,wBAAQxB,UAAW,kBAAmBwB,KAAM,SAA5C,wC,GArSdI,aAqTHG,gBALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGmB,KAAnB7E,CAAyB6I,ICpTlCU,G,kDAEF,WAAYtK,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAM,CACPtB,KAAK,GACL+E,qBAAoB,EACpBP,iBAAgB,EAChBwE,aAAa,GACbC,uBAAuB,GACvBC,YAAY,GACZvK,MAAM,GACNyB,KAAK,EACLC,KAAK,GACL0B,cAAc,GAZH,E,qDAgBnB,WAAqB,IAAD,OAChBjC,GAAamC,KAAKlE,MAAK,SAAAC,GACT,OAANA,GACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,OAExBgB,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,QAAQvC,MAAK,SAAAC,GAC9FmE,QAAQC,IAAIpE,EAAI0E,QAChB,EAAKL,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,mBAG1BjC,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAEC,OAAO,QAAQvC,MAAK,SAAAC,GAChFmE,QAAQC,IAAIpE,EAAI0E,QAChB,EAAKL,SAAS,CACV2G,aAAahL,EAAI0E,OACjBX,cAAc/D,EAAI+D,mBAG1BjC,GAAasJ,cAAcrL,MAAK,SAAAC,GAC5BmE,QAAQC,IAAIpE,EAAI,SAChB,EAAKqE,SAAS,CACV1D,MAAMX,a,oBAO1B,WAAU,IAAD,OAEC8G,EAAoB,SAAC9E,GACvB,EAAKqC,SAAS,CACVrC,OACA+E,qBAAqB,EAAKzD,MAAMyD,uBAGlCC,EAAgB,SAAChF,GACnB,EAAKqC,SAAS,CACVrC,OACAwE,iBAAiB,EAAKlD,MAAMkD,mBA0FpC,OACI,sBAAK/G,UAAU,MAAf,UACQ,cAAC,GAAD,CAAQ8C,OAAQ,KAEpB,sBAAK9C,UAAU,qBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,SACI,wBAAQA,UAAU,kBAAkB0D,QAAS,kBAAI2D,EAAoB,KAArE,oBAEJ,qBAAKrH,UAAU,WAAf,SACI,uBAAOwB,KAAM,OAAQxB,UAAU,eAAeiL,YAAa,SAAUzD,SA9C5E,SAACtH,GACV,IAAIuH,EAAGvH,EAAEwH,OAAO5B,MAChBpB,QAAQC,IAAI8C,EAAEvC,OAAO,OACjBuC,EAAEvC,QAAQ,EACV7C,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO4E,IAAInH,MAAK,SAAAC,GAC1FmE,QAAQC,IAAIpE,EAAI0E,QAChB,EAAKL,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,mBAI1BjC,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,QAAQvC,MAAK,SAAAC,GAC9F,EAAKqE,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,cAClB3B,KAAK,YAgCL,qBAAK3C,UAAU,WAAf,SACI,cAAC,KAAD,CACI2H,WAAYtC,KAAKxB,MAAMlB,KAAO,EAC9BiF,kBAAmBvC,KAAKxB,MAAMjB,KAC9BiF,gBAAiBxC,KAAKxB,MAAMS,cAC5BwD,mBAAoB,EACpBN,SAhED,SAACO,GACpBrD,QAAQC,IAAIoD,EAAW,cACvB1F,GAAaqJ,sBAAsB,CAAC/I,KAAKoF,EAAW,EAAEnF,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,QAAQvC,MAAK,SAAAC,GAC3F,EAAKqE,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,cAClB3B,KAAKoF,EAAW,QA2DJC,UAAU,YACVC,UAAU,mBAItB,qBAAKjI,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,eAACkI,GAAA,EAAD,WACI,gCACA,+BACI,qCACA,0CACA,4CACA,2CACA,8CACA,4CACA,wCACA,uCACA,6CAGJ,gCAEI7C,KAAKxB,MAAM2H,uBACXnG,KAAKxB,MAAM2H,uBAAuB3G,KAAI,SAACtC,EAAKuC,GAAN,OAClC,+BACI,6BAAKA,EAAM,EAAG,EAAKjB,MAAMlB,KAAK,EAAKkB,MAAMjB,OACzC,6BAAKL,EAAKqJ,WACV,6BAAKrJ,EAAKkG,YACV,6BAAKlG,EAAKsJ,WACV,6BAAKtJ,EAAKuJ,cACV,6BAAKvJ,EAAKwJ,YACV,6BACI,cAAC,KAAD,CAAQ/B,QAASzH,EAAKO,OAAQ0E,SAAU,kBArH3D,SAACjF,GAClBF,GAAa2J,mBAAmBzJ,EAAKS,IAAI1C,MAAK,SAAAC,GAC1CmE,QAAQC,IAAIpE,EAAI,qBACE,cAAdA,EAAIgJ,QACJ9I,IAAMC,QAAQH,EAAIgJ,SAGlB9I,IAAM+I,QAAQjJ,EAAIgJ,SAEtBlH,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,QAAQvC,MAAK,SAAAC,GAC9FmE,QAAQC,IAAIpE,EAAI0E,QAChB,EAAKL,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,sBAwGkD+F,CAAa9H,QAE7D,6BAAKA,EAAKrB,MACNqB,EAAKrB,MAAM2D,KAAI,SAAC3E,EAAEC,GAAH,OACnBD,EAAEiB,YAGE,KAEJ,+BAEI,wBAAQnB,UAAW,kBAAmB0D,QAAS,kBAAI2D,EAAoB9E,IAAvE,kBACA,wBAAQvC,UAAW,sBAAuB0D,QAAyB,UAAhBnB,EAAKqJ,SAAmB,GAAG,kBAAIrE,EAAgBhF,IAAlG,6BAIR,YAMpB,eAACsG,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMyD,oBAAqByB,OAAQ,kBAAI1B,EAAoB,KAA/E,UACI,cAACgC,GAAA,EAAD,UAAa,6BAAKhE,KAAKxB,MAAMtB,KAAK,aAAa,0BAC/C,eAAC,SAAD,CAAQtC,cAnKP,SAACC,EAAEC,GACZ,EAAK0D,MAAMtB,OACXpC,EAAE,2BAAIA,GAAL,IAAO6C,GAAG,EAAKa,MAAMtB,KAAKS,MAE/BX,GAAa4J,eAAe9L,GAAGG,MAAK,SAAAC,GAChCmE,QAAQC,IAAIpE,EAAI,kBAChB8B,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,QAAQvC,MAAK,SAAAC,GAC9F,EAAKqE,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,mBAG1BjC,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAEC,OAAO,QAAQvC,MAAK,SAAAC,GAChFmE,QAAQC,IAAIpE,EAAI0E,QAChB,EAAKL,SAAS,CACV2G,aAAahL,EAAI0E,OACjBX,cAAc/D,EAAI+D,mBAG1B+C,EAAoB,QAgJZ,UACI,eAAC2B,GAAA,EAAD,WACI,cAAC,UAAD,CAASxH,KAAM,OAAQ2H,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAKqJ,SAAS,GAAIlK,KAAM,WAAYwK,UAAQ,EAACzK,MAAO,mBACpH,cAAC,UAAD,CAASD,KAAM,OAAQ2H,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAKkG,UAAU,GAAI/G,KAAM,YAAaD,MAAO,oBAC7G,cAAC,UAAD,CAASD,KAAM,OAAQ2H,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAKsJ,SAAS,GAAInK,KAAM,WAAYD,MAAO,mBAC3G,cAAC,UAAD,CAASD,KAAM,SAAU2H,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAKuJ,YAAY,GAAIpK,KAAM,cAAeD,MAAO,sBACnH,cAAC,UAAD,CAASD,KAAM,SAAU2H,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAKwJ,UAAU,GAAIrK,KAAM,YAAaD,MAAO,oBAC7G4D,KAAKxB,MAAMtB,KAET,GADJ,cAAC,UAAD,CAASf,KAAM,WAAaE,KAAM,WAAYD,MAAO,mBAGrD,eAAC,UAAD,CAASD,KAAM,SAAUE,KAAM,OAAQD,MAAO,cAA9C,UACI,wBAAQqE,MAAM,IAAd,yBAEIT,KAAKxB,MAAM3C,MAAMgE,OAAO,EACpBG,KAAKxB,MAAM3C,MAAM2D,KAAI,SAAAtC,GAAI,OACrB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKpB,cAChC,SAGlB,eAACiI,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAI2D,EAAoB,KAAK7F,KAAM,SAAjF,0BACA,wBAAQxB,UAAW,kBAAmBwB,KAAM,SAA5C,8BAIZ,eAACqH,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMkD,gBAAiBgC,OAAQ,kBAAIxB,EAAgB,KAAvE,UACI,cAAC8B,GAAA,EAAD,sCACA,eAACD,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAI6D,EAAgB,KAAK/F,KAAM,SAA7E,0BACA,wBAAQxB,UAAW,kBAAmB0D,QAzH7C,WACTrB,GAAa8J,WAAW,EAAKtI,MAAMtB,KAAKS,IAAI1C,MAAK,SAAAC,GAC7C8B,GAAaqJ,sBAAsB,CAAC/I,KAAK,EAAKkB,MAAMlB,KAAKC,KAAK,EAAKiB,MAAMjB,KAAKC,OAAO,QAAQvC,MAAK,SAAAC,GAC9F,EAAKqE,SAAS,CACV4G,uBAAuBjL,EAAI0E,OAC3BX,cAAc/D,EAAI+D,cAClB3B,KAAK,EACLoE,iBAAiB,EAAKlD,MAAMkD,gBAC5BxE,KAAK,YAiHD,uC,GA/PLX,aA8QRG,gBALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGkB,KAAlB7E,CAAwBuJ,ICnRjCc,G,uKACF,WAAqB,IAAD,OAChB/J,GAAamC,KAAKlE,MAAK,SAAAC,GACT,OAANA,IACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,W,oBAKpC,WACI,OACI,sBAAKrB,UAAU,MAAf,UACQ,cAAC,GAAD,CAAQ8C,OAAQ,IACpB,qBAAK9C,UAAU,YAAf,SACI,gE,GAfG4B,aA0BRG,gBALG,SAAA6E,GACd,MAAO,CACHA,MAAOA,KAGkB,KAAlB7E,CAAwBqK,ICgVxBvF,I,yDAtWX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAQ,CACTtB,KAAM,GACNuE,eAAe,EACfC,iBAAiB,EACjBC,WAAY,GACZlE,QAAQ,EACRmE,qBAAsB,GACtBlD,QAAS,GACThB,UAAU,GACVL,OAAO,GACPwE,UAAU,GACVC,WAAY,GACZxE,KAAM,EACNC,KAAM,GACN0B,cAAe,GAhBJ,E,qDAoBnB,WAAqB,IAAD,OAChBjC,GAAamC,KAAKlE,MAAK,SAAAC,GACP,OAARA,GACAI,aAAagD,WAAWvE,GACxB,EAAK4B,MAAMI,QAAQC,KAAK,OAExBgB,GAAagK,4BAA4B,CACrC1J,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJmE,QAAQC,IAAIpE,GACZ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,mBAG3BjC,GAAaoC,gBAAgBnE,MAAK,SAAAC,GAC9BmE,QAAQC,IAAIpE,EAAK,WACjB,EAAKqE,SAAS,CACVb,QAASxD,OAGjB8B,GAAa0H,oBAAoBzJ,MAAK,SAAAC,GAClCmE,QAAQC,IAAIpE,EAAI,WAChB,EAAKqE,SAAS,CACVuC,WAAW5G,a,oBAU/B,WAAU,IAAD,OACC8G,EAAsB,SAAC9E,GACzB,EAAKqC,SAAS,CACVrC,OACA+E,qBAAsB,EAAKzD,MAAMyD,uBAGnCC,EAAkB,SAAChF,GACrB,EAAKqC,SAAS,CACVrC,OACAwE,iBAAkB,EAAKlD,MAAMkD,mBA6IrC,OACI,sBAAK/G,UAAU,eAAf,UACI,cAAC,GAAD,CAAQ8C,OAAQ,IAChB,sBAAK9C,UAAU,SAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wBAAQA,UAAW,kBAAmB0D,QAAS,kBAAM2D,EAAoB,KAAzE,oBAEJ,qBAAKrH,UAAU,QAAf,SACI,uBAAOwB,KAAK,OAAOgG,SAtFxB,SAACtH,GACZ,IAAIuH,EAAIvH,EAAEwH,OAAO5B,MACjBpB,QAAQC,IAAI8C,EAAEvC,OAAQ,OAClBuC,EAAEvC,QAAU,EACZ7C,GAAagK,4BAA4B,CACrC1J,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ4E,EACR3E,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAM,OAIdN,GAAagK,4BAA4B,CACrC1J,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAM,QA0DmC3C,UAAW,mBAEpD,qBAAKA,UAAU,QAAf,SACI,cAAC,KAAD,CACI2H,WAAYtC,KAAKxB,MAAMlB,KAAO,EAC9BiF,kBAAmBvC,KAAKxB,MAAMjB,KAC9BiF,gBAAiBxC,KAAKxB,MAAMS,cAC5BwD,mBAAoB,EACpBN,SA5CC,SAACO,GACtB1F,GAAagK,4BAA4B,CACrC1J,KAAMoF,EAAa,EACnBnF,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAMoF,EAAa,QAkCPC,UAAU,YACVC,UAAU,gBAGlB,qBAAKjI,UAAU,QAAf,SACI,qBAAKA,UAAU,wDAAf,SACI,yBAAQA,UAAU,oBAAoBwH,SApEtC,SAACtH,GACrB,IAAIuH,EAAIvH,EAAEwH,OAAO5B,MACjBpB,QAAQC,IAAI8C,EAAG,kBAEfpF,GAAagK,4BAA4B,CACrC1J,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW0E,IACZnH,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,oBAwDCtB,GAAG,4BADX,UAEI,wBAAQ8C,MAAO,EAAf,4BAEIT,KAAKxB,MAAME,QAAQc,KAAI,SAACtC,EAAMuC,GAAP,OACnB,wBAAQgB,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,yBAQtD,qBAAKhF,UAAU,WAAf,SAEI,eAACkI,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACA,+BACI,qCACA,sCACA,gDACA,gDACA,yCACA,0CACA,yCACA,6CAIJ,gCAEI/C,KAAKxB,MAAMoD,qBACP5B,KAAKxB,MAAMoD,qBAAqBpC,KAAI,SAACtC,EAAMuC,GAAP,OAChC,qBAAI9E,UAAW,OAAf,UACI,oBAAIA,UAAW,cAAf,SAA+B8E,EAAQ,EAAK,EAAKjB,MAAMlB,KAAO,EAAKkB,MAAMjB,OACzE,oBAAI5C,UAAW,cAAf,SAA+BuC,EAAK8F,WACpC,oBAAIrI,UAAW,cAAf,SAA+BuC,EAAK+F,YACpC,oBAAItI,UAAW,cAAf,SAA+BuC,EAAKgG,OACpC,oBAAIvI,UAAW,cAAf,SAA+BuC,EAAKwB,QAAQiB,YAC5C,oBAAIhF,UAAW,cAAf,SAA+BuC,EAAKiG,SAASC,YAC7C,oBAAIzI,UAAW,oCAAf,SAAqDuC,EAAK4I,KAAM5I,EAAK4I,KAAKtG,KAAI,SAAC8D,EAAGxI,GAAJ,OAC1E,4BAAIwI,EAAEsB,kBACR,KACF,6BACI,wBAAQjK,UAAW,8BAA+B0D,QAAS,kBAAI2D,EAAoB9E,IAAnF,0BAKZ,UAOhB,eAACsG,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMyD,oBAAqByB,OAAQ,kBAAM1B,EAAoB,KAAjF,UACI,eAAC2B,GAAA,EAAD,WACI,6BAAK3D,KAAKxB,MAAMtB,KAAO,aAAe,kBACrC8C,KAAKxB,MAAMtB,KAAK,GACb,eAAC,SAAD,CAAQtC,cAhGtB,SAACC,EAAEC,GAETkC,GAAaiK,qBAAqB,CAC9BvJ,UAAW5C,EAAE4C,UACbI,aAAahD,EAAEgD,eAChB7C,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACV7B,UAAU5C,EAAE4C,UACZL,OAAOnC,EAAI0E,aAwFC,UACI,eAAC,UAAD,CAASzD,KAAM,SAAUE,KAAM,YAAaD,MAAO,kBAAnD,UACI,wBAAQqE,MAAM,IAAd,4BAEIT,KAAKxB,MAAME,QAAQmB,OAAS,EACxBG,KAAKxB,MAAME,QAAQc,KAAI,SAAAtC,GAAI,OACnB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,eAElC,MAGhB,eAAC,UAAD,CAASxD,KAAM,SAAUE,KAAM,eAAgBD,MAAO,wBAAtD,UACI,wBAAQqE,MAAM,IAAd,2BAEIT,KAAKxB,MAAMsD,WAAWjC,OAAS,EAC3BG,KAAKxB,MAAMsD,WAAWtC,KAAI,SAAAtC,GAAI,OACtB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAKyC,eAElC,MAGhB,wBAAQhF,UAAW,mCAAoCwB,KAAM,SAA7D,6BAKZ,eAAC,SAAD,CAAQvB,cAxPJ,SAACC,EAAGC,GACpBA,EAAC,2BAAOA,GAAP,IAAS4C,UAAU,EAAKc,MAAMd,YAC/BV,GAAakK,qBAAqBpM,GAAGG,MAAK,SAAAC,GACtCmE,QAAQC,IAAIxE,GAMZkC,GAAagK,4BAA4B,CACrC1J,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,mBAG3BjC,GAAagK,4BAA4B,CACrC1J,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EACNC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVoC,WAAYzG,EAAI0E,OAChBX,cAAe/D,EAAI+D,mBAG3B+C,EAAoB,QAuNZ,UACI,eAAC2B,GAAA,EAAD,WACI,cAAC,UAAD,CAASxH,KAAM,SAAU2H,aAAc9D,KAAKxB,MAAMtB,MAAK8C,KAAKxB,MAAMtB,KAAKG,OAAO2C,KAAKxB,MAAMtB,KAAKG,OAAW,IAAKhB,KAAM,YAAawH,UAAQ,EAChIzH,MAAO,mBADhB,SAGQ4D,KAAKxB,MAAMnB,OAAOwC,OAAS,EACvBG,KAAKxB,MAAMnB,OAAOmC,KAAI,SAAAtC,GAAI,OAClB,wBAAQuD,MAAOvD,EAAKS,GAApB,SAAyBT,EAAK0H,kBAElC,KAGhB,cAAC,UAAD,CAASzI,KAAM,OAAQE,KAAM,YAAayH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK+F,UAAU,GAAI7G,MAAO,8BAC7G,cAAC,UAAD,CAASD,KAAM,OAAQE,KAAM,WAAYyH,aAAc9D,KAAKxB,MAAMtB,KAAK8C,KAAKxB,MAAMtB,KAAK8F,SAAS,GAAI5G,MAAO,+BAG/G,eAAC2H,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAM2D,EAAoB,KAChE7F,KAAM,SADd,0BAGA,wBAAQxB,UAAW,kBAAmBwB,KAAM,SAA5C,8BAIZ,eAACqH,GAAA,EAAD,CAAOC,OAAQzD,KAAKxB,MAAMkD,gBAAiBgC,OAAQ,kBAAMxB,EAAgB,KAAzE,UACI,cAAC8B,GAAA,EAAD,sCACA,eAACD,GAAA,EAAD,WACI,wBAAQpJ,UAAW,iBAAkB0D,QAAS,kBAAM6D,EAAgB,KAC5D/F,KAAM,SADd,0BAGA,wBAAQxB,UAAW,kBAAmB0D,QAlP3C,WACXrB,GAAaiH,iBAAiB,GAAGhJ,MAAK,SAAAC,GAClCmE,QAAQC,IAAIpE,GACRA,EAAIG,QACJD,IAAMC,QAAQH,EAAIgJ,SAElB9I,IAAM+I,QAAQjJ,EAAIgJ,SAEtBlH,GAAaoH,wBAAwB,CACjC9G,KAAM,EAAKkB,MAAMlB,KACjBC,KAAM,EAAKiB,MAAMjB,KACjBC,OAAQ,MACRC,OAAQ,EAAKe,MAAMf,OACnBC,UAAW,IACZzC,MAAK,SAAAC,GACJ,EAAKqE,SAAS,CACVqC,qBAAsB1G,EAAI0E,OAC1BX,cAAe/D,EAAI+D,cACnB3B,KAAM,EACNoE,iBAAkB,EAAKlD,MAAMkD,gBAC7BxE,KAAM,YA8NF,uC,GA/VLX,cCUjB4K,GAAYC,aAClB7C,IAEMhD,GAAM8F,aACZF,IAmBeG,GAjBL,WACN,OAAO,cAAC,IAAD,UACH,eAAC,IAAD,CAAU/F,MAAOA,GAAjB,UACI,cAAC,IAAD,IACJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgG,KAAK,aAAaC,UAAWjJ,KACpC,cAAC,IAAD,CAAOgJ,KAAK,UAAUC,UAAW/C,KACjC,cAAC,IAAD,CAAO8C,KAAK,WAAWC,UAAWhG,KAClC,cAAC,IAAD,CAAO+F,KAAK,cAAcC,UAAWC,KACrC,cAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWjC,KAC9B,cAAC,IAAD,CAAOgC,KAAK,YAAYC,UAAWvB,KACnC,cAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAWT,KAClC,cAAC,IAAD,CAAOQ,KAAK,IAAIC,UAAWtN,aC/BvCwN,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.2e71677a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Business-Self-Driving-Trucks-TuSimple.6f665352.jpg\";","// export const BASE_URL='http://localhost:8080/api/'\r\nexport const BASE_URL='/api/'\r\n\r\nexport const TOKEN_NAME='CRM-TOKEN'\r\nexport const TOKEN_TYPE='Bearer '\r\n","export const  api={\r\n    //Auth\r\n    login:'auth/login',\r\n    me:'users/me',\r\n\r\n    //Dazvol\r\n    allDazvols: 'dazvol/all',\r\n    allDazvolsByPageable: 'dazvol/allByPageable',\r\n    allDazvolsByActive: 'dazvol/getActive',\r\n    allTirByActive: 'tir/getActive',\r\n    allDazvolNames: 'dazvol/getDazvolName',\r\n    allCompany: 'dazvol/getCompany',\r\n    saveOrEditDazvol: 'dazvol/saveOrEdit',\r\n    changeActiveOfDazvol: 'dazvol/changeActive/',\r\n    removeDazvol: 'dazvol/delete/',\r\n    removeDazvolSale: 'dazvolSale/delete/',\r\n\r\n    //Tir\r\n    allTiresByPageable: 'tir/allByPageable',\r\n    saveOrEditTir: 'tir/saveOrEdit',\r\n    changeActiveOfTir: 'tir/changeActive/',\r\n\r\n    //DazvolSale\r\n    saveOrEditDazvolSale: 'dazvolSale/save',\r\n    saveOrEditTirSale: 'tirSale/saveOrEdit',\r\n    allDazvolSalesByPageable: 'dazvolSale/allByPageable',\r\n    allTirsSalesByPageable: 'tirSale/allByPageable',\r\n    removeUsers: 'users/delete/',\r\n    allRoles: 'role/all',\r\n    saveOrEditUser: 'users/saveOrEdit',\r\n    changeActiveOfUser: 'users/changeActive/',\r\n    allUsersByPageable: 'users/allByPageable',\r\n}","export const LOGIN='LOGIN'","import React, {Component} from 'react';\r\nimport {AvForm,AvField} from 'availity-reactstrap-validation'\r\nimport fura from '../photos/Business-Self-Driving-Trucks-TuSimple.jpg'\r\nimport axios from \"axios\";\r\nimport {BASE_URL, TOKEN_NAME, TOKEN_TYPE} from \"../utills/constants\";\r\nimport {api} from '../apiPaths/api'\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../redux/actions/AuthAction\";\r\nimport {toast} from \"react-toastify\";\r\nclass HomePage extends Component {\r\n    render() {\r\n        const login=(e,v)=>{\r\n            axios.post(BASE_URL+api.login,v).then(res=>{\r\n                if (res.status===200){\r\n                    toast.success(\"Success\")\r\n                    localStorage.setItem(TOKEN_NAME,TOKEN_TYPE+res.data)\r\n                    let parsedToken=jwtDecode(res.data)\r\n                    this.props.signIn(parsedToken.roles[0].roleName)\r\n                    if (parsedToken.roles[0].roleName==='ROLE_ADMIN'){\r\n                        this.props.history.push(\"/dashboard\")\r\n                    }\r\n                    else if (parsedToken.roles[0].roleName==='ROLE_MANAGER'){\r\n                        this.props.history.push(\"/reports\")\r\n                    }\r\n                    else if (parsedToken.roles[0].roleName==='ROLE_SELLER'){\r\n                        this.props.history.push(\"/sale\")\r\n                    }else {\r\n                        this.props.history.push(\"/\")\r\n                    }\r\n                }\r\n\r\n            }).catch(res=>{\r\n                toast.error(\"Error\")\r\n            })\r\n        }\r\n        let applying = {\r\n            backgroundImage: 'url(' + fura + ')',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'right center, left top',\r\n            backgroundSize: '100%, 100%',\r\n            width: '100%',\r\n            height: '100vh',\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 p-5\">\r\n                        <div className=\"row mt-5\">\r\n                            <div className=\"col-md-12\">\r\n                                <AvForm onValidSubmit={login}>\r\n                                    <AvField type={'text'} label={'Enter username : '} name={'username'}/>\r\n                                    <AvField type={'password'} label={'Enter password : '} name={'password'}/>\r\n                                    <button type={'submit'} className={'btn btn-success mt-2'}>Login</button>\r\n                                </AvForm>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div style={applying}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatch={\r\n    signIn:login\r\n}\r\n\r\nexport default connect(null,mapDispatch)(HomePage);","import {LOGIN} from \"../types/AuthTypes\";\r\n\r\nexport const login=(roleName)=>{\r\n    return {\r\n        type:LOGIN,\r\n        payload:roleName\r\n    }\r\n}","import axios from \"axios\";\r\nimport {BASE_URL, TOKEN_NAME} from \"./constants\";\r\n\r\nexport const request=(method,url,data)=>{\r\n    const token=localStorage.getItem(TOKEN_NAME)\r\n    const headers={\r\n        'Authorization':token,\r\n        'Access-Control-Allow-Origin': '*'\r\n    }\r\n    return axios({\r\n        url:BASE_URL+url,method,data,headers})\r\n}","import {request} from \"../utills/Request\";\r\nimport {api} from \"../apiPaths/api\";\r\n\r\nclass AdminRequest{\r\n    //Auth\r\n    static async me(){\r\n        let user=''\r\n        await request('get',api.me).then(res=>{\r\n        user= res.data\r\n        }).catch(res=>{\r\n            user=null\r\n        })\r\n        return user\r\n    }\r\n\r\n\r\n    //Dazvol\r\n    static async saveOrEditDazvol(item){\r\n        let response=''\r\n        await request('post',api.saveOrEditDazvol,item).then(res=>{\r\n            response=res\r\n        }).catch(res=>{\r\n            response=''\r\n        })\r\n        return response\r\n    }\r\n    static async getAllDazvolsByPageable(params){\r\n        let dazvol = []\r\n        await request('get',api.allDazvolsByPageable+'?page='+params.page+'&size='+params.size+'&search='+params.search+'&active='+params.active+'&companyId='+params.companyId).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n    static async getAllDazvolNames(){\r\n        let dazvol = []\r\n        await request('get',api.allDazvolNames).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n    static async getAllCompany(){\r\n        let dazvol = []\r\n        await request('get',api.allCompany).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n\r\n    static async changeActiveOfDazvol(id){\r\n        let kpi=[]\r\n        await request('get',api.changeActiveOfDazvol+id).then(res=>{\r\n            kpi= res.data\r\n        }).catch(res=>{\r\n            kpi=[]\r\n        })\r\n        return kpi\r\n    }\r\n\r\n    static async removeDazvol(id) {\r\n        let kpi = []\r\n        await request('get', api.removeDazvol + id).then(res => {\r\n            kpi = res.data\r\n        }).catch(res => {\r\n            kpi = []\r\n        })\r\n        return kpi\r\n    }\r\n    static async removeDazvolSale(id) {\r\n        let kpi = []\r\n        await request('get', api.removeDazvolSale + id).then(res => {\r\n            kpi = res.data\r\n        }).catch(res => {\r\n            kpi = []\r\n        })\r\n        return kpi\r\n    }\r\n\r\n    //TIR\r\n    static async getAllTiresByPageable(params){\r\n        let tir = []\r\n        await request('get',api.allTiresByPageable+'?page='+params.page+'&size='+params.size+'&search='+params.search+'&active='+params.active+'&companyId='+params.companyId).then(res=>{\r\n            tir= res.data\r\n        }).catch(res=>{\r\n            tir=[]\r\n        })\r\n        return tir\r\n    }\r\n    static async saveOrEditTir(item){\r\n        let response=''\r\n        await request('post',api.saveOrEditTir,item).then(res=>{\r\n            response=res\r\n        }).catch(res=>{\r\n            response=''\r\n        })\r\n        return response\r\n    }\r\n    static async changeActiveOfTir(id){\r\n        let tir=[]\r\n        await request('get',api.changeActiveOfTir+id).then(res=>{\r\n            tir= res.data\r\n        }).catch(res=>{\r\n            tir=[]\r\n        })\r\n        return tir\r\n    }\r\n\r\n    ///SAleDazvol\r\n    static async saveOrEditDazvolSale(item){\r\n        let response=''\r\n        await request('post',api.saveOrEditDazvolSale,item).then(res=>{\r\n            response=res\r\n        }).catch(res=>{\r\n            response=''\r\n        })\r\n        return response\r\n    }\r\n\r\n    static async saveOrEditTirSale(item){\r\n        let response=''\r\n        await request('post',api.saveOrEditTirSale,item).then(res=>{\r\n            response=res\r\n        }).catch(res=>{\r\n            response=''\r\n        })\r\n        return response\r\n    }\r\n\r\n    static async getAllDazvolSalesByPageable(params){\r\n        let dazvol = []\r\n        await request('get',api.allDazvolSalesByPageable+'?page='+params.page+'&size='+params.size+'&search='+params.search+'&active='+params.active+'&companyId='+params.companyId).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n\r\n    static async getAllTirsSalesByPageable(params){\r\n        let dazvol = []\r\n        await request('get',api.allTirsSalesByPageable+'?page='+params.page+'&size='+params.size+'&search='+params.search+'&active='+params.active+'&companyId='+params.companyId).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n\r\n\r\n    static async getAllDazvolByActive(params){\r\n        let dazvol = []\r\n        await request('get',api.allDazvolsByActive+'?companyId='+params.companyId+'&dazvolNameId='+params.dazvolNameId).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n\r\n    static async getAllTirByActive(params){\r\n        let dazvol = []\r\n        await request('get',api.allTirByActive+'?companyId='+params.companyId).then(res=>{\r\n            dazvol= res.data\r\n        }).catch(res=>{\r\n            dazvol=[]\r\n        })\r\n        return dazvol\r\n    }\r\n\r\n\r\n    static async getAllUsersByPageable(params){\r\n        let categories=[]\r\n        await request('get',api.allUsersByPageable+'?page='+params.page+'&size='+params.size+'&search='+params.search).then(res=>{\r\n            categories= res.data\r\n        }).catch(res=>{\r\n            categories=[]\r\n        })\r\n        return categories\r\n    }\r\n\r\n\r\n    static async changeActiveOfUser(id){\r\n        let users=[]\r\n        await request('get',api.changeActiveOfUser+id).then(res=>{\r\n            users= res.data\r\n        }).catch(res=>{\r\n            users=[]\r\n        })\r\n        return users\r\n    }\r\n\r\n    static async saveOrEditUser(item){\r\n        let response=''\r\n        await request('post',api.saveOrEditUser,item).then(res=>{\r\n            response=res\r\n        }).catch(res=>{\r\n            response=''\r\n        })\r\n        return response\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    static async removeUser(id){\r\n        let user=[]\r\n        await request('get',api.removeUsers+id).then(res=>{\r\n            user= res.data\r\n        }).catch(res=>{\r\n            user=[]\r\n        })\r\n        return user\r\n    }\r\n\r\n\r\n\r\n    static async getAllRoles() {\r\n        let role=[]\r\n        await request('get',api.allRoles).then(res=>{\r\n            role= res.data\r\n        }).catch(res=>{\r\n            role=[]\r\n        })\r\n        return role\r\n    }\r\n\r\n\r\n}\r\nexport default AdminRequest","import {TOKEN_NAME} from \"./constants\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const getRoleNameFromJWT=()=>{\r\n    if (localStorage.getItem(TOKEN_NAME)){\r\n        const parsedToken = jwtDecode(localStorage.getItem(TOKEN_NAME))\r\n        return parsedToken.roles[0].roleName\r\n    }else {\r\n        return ''\r\n    }\r\n}","import {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\n\r\nimport {TOKEN_NAME} from \"../utills/constants\";\r\n\r\nconst NavBar = (props) => {\r\n    const exitFunc = () => {\r\n        localStorage.removeItem(TOKEN_NAME)\r\n    }\r\n    return <div className={'bg-dark'}>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {\r\n                    getRoleNameFromJWT()=== 'ROLE_ADMIN' ?\r\n                        <nav className={'navbar navbar-expand-lg navbar-dark sticky-top bg-dark bg-light'}>\r\n                            <div className=\"navbar-nav\">\r\n                                <a href={\"/dashboard\"} className={props.active === 1 ?'nav-item nav-link active font':'nav-item nav-link font'}>DASHBOARD</a>\r\n                                <a href={\"/dazvol\"} className={props.active === 2 ?'nav-item nav-link active font':'nav-item nav-link font'}>DAZVOL</a>\r\n                                <a href={\"/tir\"} className={props.active === 3 ?'nav-item nav-link active font':'nav-item nav-link font'}>TIR</a>\r\n                                <a href={\"/tirSale\"} className={props.active === 4 ?'nav-item nav-link active font':'nav-item nav-link font'}>TIRSALE</a>\r\n                                <a href={\"/dazvolSale\"} className={props.active === 5 ?'nav-item nav-link active font':'nav-item nav-link font'}>DAZVOLSALE</a>\r\n                                <a href={\"/employee\"} className={props.active === 7 ?'nav-item nav-link active font':'nav-item nav-link font'}>EMPLOYEE</a>\r\n                                <a href={\"/setting\"} className={props.active === 6 ?'nav-item nav-link active font':'nav-item nav-link font'}>SETTING</a>\r\n                                <a href={\"/\"} onClick={exitFunc} className={props.active === 6 ?'nav-item font nav-link active':'nav-item nav-link font'}>EXIT</a>\r\n                            </div>\r\n                        </nav>\r\n                        :\r\n                        ''\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default NavBar","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\n\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Column, Pie} from '@ant-design/charts';\r\nimport data from \"bootstrap/js/src/dom/data\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allTires: [],\r\n            active: true,\r\n            company: [],\r\n            dazvol: [],\r\n            dazvolCompany: '',\r\n            tirSize: [],\r\n            malga: '',\r\n            prime: '',\r\n            iml: '',\r\n            viva: '',\r\n            page: 0,\r\n            size: 10,\r\n            totalElements: 0,\r\n            TURKEY_2X: 0\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res => {\r\n            if (res === null || getRoleNameFromJWT() !== 'ROLE_ADMIN') {\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                AdminRequest.getAllCompany().then(res => {\r\n                    console.log(res, \"company\")\r\n                    this.setState({\r\n                        company: res\r\n                    })\r\n                    this.state.company.map((item, index) =>\r\n                        AdminRequest.getAllTirByActive({\r\n                            companyId: item.id\r\n                        }).then(res => {\r\n                            console.log(res, \"trre\")\r\n                            if (item.authority === \"MALGA_LOGISTICS\") {\r\n                                console.log(res.object.size, \"malga\")\r\n\r\n                                this.setState({malga: res.object.length});\r\n                            } else if (item.authority === \"IMPERIAL_LOGISTICS\") {\r\n                                this.setState({iml: res.object.length});\r\n                            } else if (item.authority === \"VIVA_LOGISTICS\") {\r\n                                this.setState({viva: res.object.length});\r\n                            } else if (item.authority === \"PRIME_TRANS\") {\r\n                                this.setState({prime: res.object.length});\r\n                            }\r\n                        })\r\n                    )\r\n                })\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const tirData = [\r\n            {\r\n                type: 'MALGA TIR',\r\n                sales: this.state.malga,\r\n            },\r\n            {\r\n                type: 'PRIME TIR',\r\n                sales: this.state.prime,\r\n            },\r\n            {\r\n                type: 'VIVA TIR',\r\n                sales: this.state.viva,\r\n            },\r\n            {\r\n                type: 'IMPERIAL TIR',\r\n                sales: this.state.iml,\r\n            },\r\n        ];\r\n\r\n        let dazvolData = [\r\n            {\r\n                type: 'turkey-2x',\r\n                value: this.state.TURKEY_2X,\r\n            },\r\n            {\r\n                type: 'turkey-3x',\r\n                value: 2,\r\n            },\r\n            {\r\n                type: 'gruziya-2x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'gruziya-3x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'kazak',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'russia',\r\n                value: 5,\r\n            },\r\n            {\r\n                type: 'tajik-2x',\r\n                value: 5,\r\n            },\r\n            {\r\n                type: 'tajik-3x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'latvia',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'litva',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'germany',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'tajik-3x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'belarus-2x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'belarus-3x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'turkmaniston-3x',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'kirgiz',\r\n                value: 1,\r\n            },\r\n\r\n        ];\r\n\r\n\r\n        const configTir = {\r\n            data: tirData,\r\n            xField: 'type',\r\n            yField: 'sales',\r\n            label: {\r\n                position: 'middle',\r\n                style: {\r\n                    backgroundColor: 'rgba(2,126,229,0.5)'\r\n                },\r\n            },\r\n            meta: {\r\n                type: {alias: 'Category'},\r\n                sales: {alias: 'Sales'},\r\n            },\r\n        };\r\n        let config1 = {\r\n            appendPadding: 10,\r\n            data: dazvolData,\r\n            angleField: 'value',\r\n            colorField: 'type',\r\n            radius: 1,\r\n            label: {type: 'outer'},\r\n            interactions: [{type: 'element-active'}],\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"row bg-light\">\r\n                <NavBar active={1}/>\r\n\r\n                <div className=\"col-md-6 mt-5\">\r\n                    <h1 className=\"text-center\">TIR</h1>\r\n                    <Column\r\n                        {...configTir}\r\n                        onReady={(plot) => {\r\n                            plot.on('plot:click', (evt) => {\r\n                                const {x, y} = evt;\r\n                                const {xField} = plot.options;\r\n                                const tooltipData = plot.chart.getTooltipItems({x, y});\r\n                            });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mt-5\">\r\n                    <h2 className={\"mb-0 text-center\"}>Malga</h2>\r\n                    <Pie {...config1} />;\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore, null)(Dashboard);","import React, {Component} from 'react';\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport {TOKEN_NAME} from \"../utills/constants\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader,Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nclass SalePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            showSaveModal: false,\r\n            showDeleteModal: false,\r\n            allDazvols: [],\r\n            active: true,\r\n            allDazvolsByPageable: [],\r\n            company: [],\r\n            companyId:'',\r\n            dazvol:[],\r\n            deleteIds:[],\r\n            dazvolName: [],\r\n            page: 0,\r\n            size: 10,\r\n            totalElements: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res => {\r\n            if (res === null) {\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                AdminRequest.getAllTirsSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllCompany().then(res => {\r\n                    console.log(res, \"company\")\r\n                    this.setState({\r\n                        company: res\r\n                    })\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const openSaveOrEditModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showSaveOrEditModal: !this.state.showSaveOrEditModal\r\n            })\r\n        }\r\n        const openDeleteModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showDeleteModal: !this.state.showDeleteModal\r\n            })\r\n        }\r\n        const saveOrEdits = (e, v) => {\r\n            v = {...v,companyId:this.state.companyId}\r\n            console.log(v,\"feffs\")\r\n            AdminRequest.saveOrEditTirSale(v).then(res => {\r\n                console.log(res,\"fdfefe\")\r\n                // if (res.data.success) {\r\n                //     toast.success(res.data.message)\r\n                // } else {\r\n                //     toast.warning(res.data.message)\r\n                // }\r\n                AdminRequest.getAllTirsSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllTirsSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: 0,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvols: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                openSaveOrEditModal('')\r\n            })\r\n        }\r\n        const remove = () => {\r\n            AdminRequest.removeDazvolSale(5).then(res => {\r\n                console.log(res)\r\n                if (res.success) {\r\n                    toast.success(res.message)\r\n                } else {\r\n                    toast.warning(res.message)\r\n                }\r\n                AdminRequest.getAllDazvolsByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements,\r\n                        page: 0,\r\n                        showDeleteModal: !this.state.showDeleteModal,\r\n                        item: ''\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const search = (e) => {\r\n            let s = e.target.value;\r\n            console.log(s.length, 'SSS')\r\n            if (s.length >= 2) {\r\n                AdminRequest.getAllTirsSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: s,\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements,\r\n                        page: 0\r\n                    })\r\n                })\r\n            } else {\r\n                AdminRequest.getAllTirsSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements,\r\n                        page: 0\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const searchByCompany = (e) => {\r\n            let s = e.target.value;\r\n            console.log(s, \"company change\")\r\n\r\n            AdminRequest.getAllTirsSalesByPageable({\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                search: 'all',\r\n                active: this.state.active,\r\n                companyId: s\r\n            }).then(res => {\r\n                this.setState({\r\n                    allDazvolsByPageable: res.object,\r\n                    totalElements: res.totalElements,\r\n                })\r\n            })\r\n        }\r\n        const handlePageChange = (pageNumber) => {\r\n            AdminRequest.getAllTirsSalesByPageable({\r\n                page: pageNumber - 1,\r\n                size: this.state.size,\r\n                search: 'all',\r\n                active: this.state.active,\r\n                companyId: 0\r\n            }).then(res => {\r\n                this.setState({\r\n                    allDazvolsByPageable: res.object,\r\n                    totalElements: res.totalElements,\r\n                    page: pageNumber - 1\r\n                })\r\n            })\r\n        }\r\n        const s = (e,v) => {\r\n\r\n            AdminRequest.getAllTirByActive({\r\n                companyId: v.companyId,\r\n            }).then(res=>{\r\n                this.setState({\r\n                    companyId:v.companyId,\r\n                    dazvol:res.object\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"row bg-light\">\r\n                <NavBar active={4}/>\r\n                <div className=\"col-12\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-3 text-center\">\r\n                            <button className={'btn btn-success'} onClick={() => openSaveOrEditModal('')}>SALE</button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" onChange={search} className={'form-control'}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Pagination\r\n                                activePage={this.state.page + 1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"row d-flex justify-content-between align-items-center\">\r\n                                <select className=\"form-control w-75\" onChange={searchByCompany}\r\n                                        id=\"exampleFormControlSelect1\">\r\n                                    <option value={0}>Choose Company</option>\r\n                                    {\r\n                                        this.state.company.map((item, index) =>\r\n                                            <option value={item.id}>{item.authority}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n\r\n                        <Table bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Ismi</th>\r\n                                <th>Mashina raqami</th>\r\n                                <th>Sotilgan vaqti</th>\r\n                                <th>Company</th>\r\n                                <th>Sotuvchi</th>\r\n                                <th>Dazvols</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {\r\n                                this.state.allDazvolsByPageable ?\r\n                                    this.state.allDazvolsByPageable.map((item, index) =>\r\n                                        <tr>\r\n                                            <td className={'text-center'}>{index + 1 + (this.state.page * this.state.size)}</td>\r\n                                            <td className={'text-center'}>{item.userName}</td>\r\n                                            <td className={'text-center'}>{item.carNumber}</td>\r\n                                            <td className={'text-center'}>{item.date}</td>\r\n                                            <td className={'text-center'}>{item.company.authority}</td>\r\n                                            <td className={'text-center'}>{item.customer.firstName}</td>\r\n\r\n                                            <td className={'text-center p-0'}>{item.tirs? item.tirs.map((i, v) =>\r\n                                                <p className={'mb-0'}>{i.tirNumber}</p>\r\n                                            ):''}</td>\r\n                                            <td>\r\n                                                <button className={'btn btn-warning'} onClick={()=>openSaveOrEditModal(item)}>Edit</button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ) :\r\n                                    ''\r\n                            }\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </div>\r\n                    <Modal isOpen={this.state.showSaveOrEditModal} toggle={() => openSaveOrEditModal('')}>\r\n                        <ModalBody>\r\n                            <h4>{this.state.item ? \"Tahrirlash\" : \"Dazvol sotish\"}</h4>\r\n                            <AvForm onValidSubmit={s}>\r\n                                <AvField type={'select'} name={'companyId'} label={'Company tanlang'}>\r\n                                    <option value=\"0\">Choose Company</option>\r\n                                    {\r\n                                        this.state.company.length > 0 ?\r\n                                            this.state.company.map(item => (\r\n                                                    <option value={item.id}>{item.authority}</option>\r\n                                                )\r\n                                            ) : ''\r\n                                    }\r\n                                </AvField>\r\n                                <button className={\"btn btn-success mt-2 text-center\"} type={'submit'}>Jo'natish</button>\r\n                            </AvForm>\r\n                        </ModalBody>\r\n\r\n                        <AvForm onValidSubmit={saveOrEdits}>\r\n                            <ModalBody>\r\n                                <AvField type={'select'} name={'tirIds'} multiple\r\n                                         label={'Tirni tanlang'}>\r\n                                    {\r\n                                        this.state.dazvol.length > 0 ?\r\n                                            this.state.dazvol.map(item => (\r\n                                                    <option value={item.id}>{item.tirNumber}</option>\r\n                                                )\r\n                                            ) : ''\r\n                                    }\r\n                                </AvField>\r\n                                <AvField type={'text'} name={'carNumber'} defaultValue={this.state.item?this.state.item.carNumber:''}  label={'Mashina raqamini kiriting'}/>\r\n                                <AvField type={'text'} name={'userName'} defaultValue={this.state.item?this.state.item.userName:''} label={'Haydovchi ismi kiriting'}/>\r\n\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className={'btn btn-danger'} onClick={() => openSaveOrEditModal('')}\r\n                                        type={'button'}>Bekor qilish\r\n                                </button>\r\n                                <button className={'btn btn-success'} type={'submit'}>Saqlash</button>\r\n                            </ModalFooter>\r\n                        </AvForm>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showDeleteModal} toggle={() => openDeleteModal('')}>\r\n                        <ModalHeader>O'chirishni istaysizmi?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className={'btn btn-danger'} onClick={() => openDeleteModal('')}\r\n                                    type={'button'}>Bekor qilish\r\n                            </button>\r\n                            <button className={'btn btn-success'} onClick={remove}>O'chirish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalePage;","import {LOGIN} from \"../types/AuthTypes\";\r\n\r\nconst initialState={\r\n    userRole:''\r\n}\r\nconst auth=(state=initialState,action)=>{\r\n    switch (action.type){\r\n        case LOGIN : return {...state,userRole: action.payload}\r\n        default:return state\r\n    }\r\n}\r\nexport default auth","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Switch from \"react-switch\";\r\nimport { Spin, Space } from 'antd';\r\nimport {FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Spinner, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {toast} from \"react-toastify\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\nclass Dazvol extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            item:'',\r\n            showSaveModal:false,\r\n            showDeleteModal:false,\r\n            allDazvols:[],\r\n            active:true,\r\n            allDazvolsByPageable:[],\r\n            company:[],\r\n            dazvolName:[],\r\n            page:0,\r\n            size:10,\r\n            totalElements:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res=>{\r\n            if (res===null){\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            }else {\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    console.log(res)\r\n                    this.setState({\r\n                        allDazvolsByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllDazvolNames().then(res=>{\r\n                    console.log(res,\"dazvol \")\r\n                    this.setState({\r\n                        dazvolName:res\r\n                    })\r\n                })\r\n                AdminRequest.getAllCompany().then(res=>{\r\n                    console.log(res,\"company\")\r\n                    this.setState({\r\n                        company:res\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const openSaveOrEditModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showSaveOrEditModal:!this.state.showSaveOrEditModal\r\n            })\r\n        }\r\n        const openDeleteModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showDeleteModal:!this.state.showDeleteModal\r\n            })\r\n        }\r\n        const saveOrEdit=(e,v)=>{\r\n            if (this.state.item){\r\n                v={...v,id:this.state.item.id}\r\n            }\r\n            AdminRequest.saveOrEditDazvol(v).then(res=>{\r\n                console.log(res,\"sdad\")\r\n                if (res.data.success){\r\n                    toast.success(res.data.message)\r\n                }\r\n                else {\r\n                    toast.warning(res.data.message)\r\n                }\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allDazvolsByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:0,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allDazvols:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                openSaveOrEditModal('')\r\n            })\r\n        }\r\n        const remove=()=>{\r\n            AdminRequest.removeDazvol(this.state.item.id).then(res=>{\r\n                console.log(res)\r\n                if (res.success){\r\n                    toast.success(res.message)\r\n                }\r\n                else {\r\n                    toast.warning(res.message)\r\n                }\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allDazvolsByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0,\r\n                        showDeleteModal:!this.state.showDeleteModal,\r\n                        item:''\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const changeActive = (item) => {\r\n            AdminRequest.changeActiveOfDazvol(item.id).then(res=>{\r\n                if (res.message==='Activated'){\r\n                    toast.success(res.message)\r\n                }\r\n                else {\r\n                    toast.warning(res.message)\r\n                }\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allDazvolsByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n            })\r\n\r\n        }\r\n        const handlePageChange=(pageNumber)=>{\r\n            AdminRequest.getAllDazvolsByPageable({page:pageNumber-1,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                this.setState({\r\n                    allDazvolsByPageable:res.object,\r\n                    totalElements:res.totalElements,\r\n                    page:pageNumber-1\r\n                })\r\n            })\r\n        }\r\n        const search=(e)=>{\r\n            let s= e.target.value;\r\n            console.log(s.length,'SSS')\r\n            if (s.length>=2){\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:s,active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allDazvolsByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0\r\n                    })\r\n                })\r\n            }else {\r\n                AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allDazvolsByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const searchByCompany=(e)=>{\r\n            let s= e.target.value;\r\n            console.log(s,\"company change\")\r\n            AdminRequest.getAllDazvolsByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:s}).then(res=>{\r\n                this.setState({\r\n                    allDazvolsByPageable:res.object,\r\n                    totalElements:res.totalElements,\r\n                })\r\n            })\r\n        }\r\n\r\n        const change=()=>{\r\n            this.setState(\r\n                {\r\n                    active:!this.state.active\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"row bg-light\">\r\n                        <NavBar active={2}/>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-3 text-center\">\r\n                            <button className={'btn btn-success'} onClick={()=>openSaveOrEditModal('')}>ADD</button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" onChange={search} className={'form-control'}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Pagination\r\n                                activePage={this.state.page + 1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"row d-flex justify-content-between align-items-center\">\r\n                                <select className=\"form-control w-75\" onChange={searchByCompany} id=\"exampleFormControlSelect1\">\r\n                                    <option value={0}>Choose Company</option>\r\n                                    {\r\n                                        this.state.company.map((item, index)=>\r\n                                            <option value={item.id}>{item.authority}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                <input type=\"checkbox\" className={'form-check-input'} onClick={change} checked={this.state.active}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n\r\n                        <Table bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>ID</th>\r\n                                <th>Kelgan vaqti</th>\r\n                                <th>Tugash vaqti</th>\r\n                                <th>Company</th>\r\n                                <th>Nomi</th>\r\n                                <th>Active</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {\r\n                                this.state.allDazvolsByPageable?\r\n                                    this.state.allDazvolsByPageable.map((item,index)=>\r\n                                        <tr>\r\n                                            <td>{index+1+(this.state.page*this.state.size)}</td>\r\n                                            <td>{item.dazvolNumber}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.experienceDate}</td>\r\n                                            <td>{item.company.companyName}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td> <Switch checked={item.active} onChange={()=>changeActive(item)}/>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className={'btn btn-warning'} onClick={()=>openSaveOrEditModal(item)}>Edit</button>\r\n                                                <button className={'btn btn-danger'} onClick={()=>openDeleteModal(item)}>Delete</button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                ):\r\n                                    ''\r\n                            }\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </div>\r\n                    <Modal isOpen={this.state.showSaveOrEditModal} toggle={()=>openSaveOrEditModal('')}>\r\n                        <ModalHeader><h4>{this.state.item?\"Tahrirlash\":\"Yangi Dazvol qo'shish\"}</h4></ModalHeader>\r\n                        <AvForm onValidSubmit={saveOrEdit}>\r\n                            <ModalBody>\r\n\r\n                                <AvField type={'text'} name={'dazvolNumber'} defaultValue={this.state.item?this.state.item.dazvolNumber:''} label={'Dazvol raqamini 1-kiriting'}/>\r\n                                {this.state.item?'':\r\n                                    <AvField type={'text'} name={'dazvolNumber2'}  label={'Dazvol raqamini 2-kiriting'}/>\r\n                                }\r\n                                <AvField type={'date'} name={'experienceDate'} defaultValue={this.state.item?this.state.item.experienceDate:''} label={'Tugash muddatini kiriting'}/>\r\n                                <AvField type={'select'} name={'companyId'} defaultValue={this.state.item?this.state.item.company?this.state.item.company.id:'0':'0'}  label={'Company tanlang'}>\r\n                                    <option value=\"0\">Choose Company</option>\r\n                                    {\r\n                                        this.state.company.length>0?\r\n                                            this.state.company.map(item=>(\r\n                                                <option value={item.id}>{item.authority}</option>\r\n                                            )\r\n                                            ):''\r\n                                    }\r\n                                </AvField>\r\n                                <AvField type={'select'} name={'dazvolNameId'} defaultValue={this.state.item?this.state.item.dazvolName?this.state.item.dazvolName.id:'0':'0'} label={'Dazvol turini tanlang'}>\r\n                                    <option value=\"0\">Choose Type</option>\r\n                                    {\r\n                                        this.state.dazvolName.length>0?\r\n                                            this.state.dazvolName.map(item=>(\r\n                                                    <option value={item.id}>{item.authority}</option>\r\n                                                )\r\n                                            ):''\r\n                                    }\r\n                                </AvField>\r\n\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className={'btn btn-danger'} onClick={()=>openSaveOrEditModal('')} type={'button'}>Bekor qilish</button>\r\n                                <button className={'btn btn-success'} type={'submit'}>Saqlash</button>\r\n                            </ModalFooter>\r\n                        </AvForm>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showDeleteModal} toggle={()=>openDeleteModal('')}>\r\n                        <ModalHeader>O'chirishni istaysizmi?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className={'btn btn-danger'} onClick={()=>openDeleteModal('')} type={'button'}>Bekor qilish</button>\r\n                            <button className={'btn btn-success'} onClick={remove}>O'chirish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore,null)(Dazvol);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport axios from \"axios\";\r\nimport {api} from \"../apiPaths/api\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nclass Supplier extends Component {\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res=>{\r\n            if (res===null){\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <NavBar active={6}/>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    <h1>This is Supplier Page</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore,null)(Supplier);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport axios from \"axios\";\r\nimport {api} from \"../apiPaths/api\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nclass Warehouse extends Component {\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res=>{\r\n            if (res===null){\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <NavBar active={7}/>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    <h1>This is Warehouse Page</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore,null)(Warehouse);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport axios from \"axios\";\r\nimport {api} from \"../apiPaths/api\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nclass Products extends Component {\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res=>{\r\n            if (res===null){\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <NavBar active={8}/>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    <h1>This is Products Page</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore,null)(Products);","import '../Loading.css';\r\n\r\nfunction Loading() {\r\n    return <div className=\"spinner\">\r\n\r\n    </div>\r\n}\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport Switch from \"react-switch\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Loading from \"./Loading\";\r\n\r\nclass TIR extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            loading:false,\r\n            showSaveModal: false,\r\n            showDeleteModal: false,\r\n            allTires: [],\r\n            active: true,\r\n            allTiresByPageable: [],\r\n            company: [],\r\n            page: 0,\r\n            size: 10,\r\n            totalElements: 0\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        AdminRequest.me().then(res => {\r\n            if (res === null) {\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                AdminRequest.getAllTiresByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        allTiresByPageable: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                    .finally(()=>\r\n                    this.setState({\r\n                        loading:false\r\n                    })\r\n                )\r\n                // AdminRequest.getAllTiresByPageable({\r\n                //     page: this.state.page,\r\n                //     size: 0,\r\n                //     search: 'all',\r\n                //     active: this.state.active,\r\n                //     companyId: 0\r\n                // }).then(res => {\r\n                //     this.setState({\r\n                //         allTires: res.object,\r\n                //         totalElements: res.totalElements\r\n                //     })\r\n                // })\r\n                AdminRequest.getAllCompany().then(res => {\r\n                    this.setState({\r\n                        company: res\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const openSaveOrEditModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showSaveOrEditModal: !this.state.showSaveOrEditModal\r\n            })\r\n        }\r\n        const openDeleteModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showDeleteModal: !this.state.showDeleteModal\r\n            })\r\n        }\r\n        const saveOrEdit = (e, v) => {\r\n            if (this.state.item) {\r\n                v = {...v, id: this.state.item.id}\r\n            }\r\n            AdminRequest.saveOrEditTir(v).then(res => {\r\n                if (res.data.success) {\r\n                    toast.success(res.data.message)\r\n                } else {\r\n                    toast.warning(res.data.message)\r\n                }\r\n                AdminRequest.getAllTiresByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allTiresByPageable: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllTiresByPageable({\r\n                    page: this.state.page,\r\n                    size: 0,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allTires: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                openSaveOrEditModal('')\r\n            })\r\n        }\r\n        const search=(e)=>{\r\n            let s= e.target.value;\r\n            console.log(s.length,'SSS')\r\n            if (s.length>=2){\r\n                AdminRequest.getAllTiresByPageable({page:this.state.page,size:this.state.size,search:s,active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allTiresByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0\r\n                    })\r\n                })\r\n            }else {\r\n                AdminRequest.getAllTiresByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allTiresByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const searchByCompany=(e)=>{\r\n            let s= e.target.value;\r\n            console.log(s,\"company change\")\r\n            AdminRequest.getAllTiresByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:s}).then(res=>{\r\n                this.setState({\r\n                    allTiresByPageable:res.object,\r\n                    totalElements:res.totalElements,\r\n                    page:0\r\n                })\r\n            })\r\n        }\r\n        const change=()=>{\r\n            this.setState(\r\n                {\r\n                    active:!this.state.active\r\n                }\r\n            )\r\n        }\r\n        const changeActive = (item) => {\r\n            AdminRequest.changeActiveOfTir(item.id).then(res=>{\r\n                if (res.message==='Activated'){\r\n                    toast.success(res.message)\r\n                }\r\n                else {\r\n                    toast.warning(res.message)\r\n                }\r\n                AdminRequest.getAllTiresByPageable({page:this.state.page,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                    this.setState({\r\n                        allTiresByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n            })\r\n\r\n        }\r\n        const handlePageChange=(pageNumber)=>{\r\n            AdminRequest.getAllTiresByPageable({page:pageNumber-1,size:this.state.size,search:'all',active:this.state.active,companyId:0}).then(res=>{\r\n                this.setState({\r\n                    allTiresByPageable:res.object,\r\n                    totalElements:res.totalElements,\r\n                    page:pageNumber-1\r\n                })\r\n            })\r\n        }\r\n\r\n        if(this.state.loading) {\r\n            return <Loading />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"row bg-light\">\r\n                <NavBar active={3}/>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-3\">\r\n                            <button className={'btn btn-success s'} onClick={() => openSaveOrEditModal('')}>ADD</button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" placeholder={'Izlash'} onChange={search} className={'form-control s'}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Pagination\r\n                                activePage={this.state.page + 1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={3}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"row d-flex justify-content-between align-items-center\">\r\n                                <select className=\"form-control w-75 s\" onChange={searchByCompany} id=\"exampleFormControlSelect1\">\r\n                                    <option value={0}>Choose Company</option>\r\n                                    {\r\n                                        this.state.company.map((item, index)=>\r\n                                            <option value={item.id}>{item.authority}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                <input type=\"checkbox\" className={'form-check-input s'} onClick={change} checked={this.state.active}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n\r\n                        <Table bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>ID</th>\r\n                                <th>Kelgan vaqti</th>\r\n                                <th>Tugash vaqti</th>\r\n                                <th>Company</th>\r\n                                <th>list</th>\r\n                                <th>Active</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {\r\n                                this.state.allTiresByPageable?\r\n                                    this.state.allTiresByPageable.map((item,index)=>\r\n                                        <tr>\r\n                                            <td>{index+1+(this.state.page*this.state.size)}</td>\r\n                                            <td>{item.tirNumber}</td>\r\n                                            <td>{item.fromDate}</td>\r\n                                            <td>{item.experienceDate}</td>\r\n                                            <td>{item.company.companyName}</td>\r\n                                            <td>{item.list}</td>\r\n                                            <td> <Switch checked={item.active} onChange={()=>changeActive(item)}/>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className={'btn btn-warning'} onClick={()=>openSaveOrEditModal(item)}>Edit</button>\r\n                                                <button className={'btn btn-danger'} onClick={()=>openDeleteModal(item)}>Delete</button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ):\r\n                                    ''\r\n                            }\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </div>\r\n                    <Modal isOpen={this.state.showSaveOrEditModal} toggle={()=>openSaveOrEditModal('')}>\r\n                        <ModalHeader><h4>{this.state.item?\"Tahrirlash\":\"Yangi TIR qo'shish\"}</h4></ModalHeader>\r\n                        <AvForm onValidSubmit={saveOrEdit}>\r\n                            <ModalBody>\r\n\r\n                                <AvField type={'number'} name={'tirNumber'} defaultValue={this.state.item?this.state.item.tirNumber:''} label={'Tir raqamini 1-kiriting'}/>\r\n                                {this.state.item?'':\r\n                                    <AvField type={'number'} name={'tirNumber2'}  label={'Tir raqamini 2-kiriting'}/>\r\n                                }\r\n                                <AvField type={'number'} name={'list'} defaultValue={this.state.item?this.state.item.list:''} label={'Tir listini kiriting'}/>\r\n                                <AvField type={'date'} name={'experienceDate'} defaultValue={this.state.item?this.state.item.experienceDate:''}  label={'Tugash muddatini kiriting'}/>\r\n                                <AvField type={'select'} name={'companyId'} defaultValue={this.state.item?this.state.item.company?this.state.item.company.id:'0':'0'}  label={'Company tanlang'}>\r\n                                    <option value=\"0\">Choose Company</option>\r\n                                    {\r\n                                        this.state.company.length>0?\r\n                                            this.state.company.map(item=>(\r\n                                                    <option value={item.id}>{item.authority}</option>\r\n                                                )\r\n                                            ):''\r\n                                    }\r\n                                </AvField>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className={'btn btn-danger'} onClick={()=>openSaveOrEditModal('')} type={'button'}>Bekor qilish</button>\r\n                                <button className={'btn btn-success'} type={'submit'}>Saqlash</button>\r\n                            </ModalFooter>\r\n                        </AvForm>\r\n                    </Modal>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore, null)(TIR);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport axios from \"axios\";\r\nimport {api} from \"../apiPaths/api\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport {toast} from \"react-toastify\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport Switch from \"react-switch\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\n\r\nclass Employee extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            item:'',\r\n            showSaveOrEditModal:false,\r\n            showDeleteModal:false,\r\n            allEmployees:[],\r\n            allEmployeesByPageable:[],\r\n            permissions:[],\r\n            roles:[],\r\n            page:0,\r\n            size:10,\r\n            totalElements:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res=>{\r\n            if (res===null){\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            }else {\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:this.state.size,search:'all'}).then(res=>{\r\n                    console.log(res.object)\r\n                    this.setState({\r\n                        allEmployeesByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:0,search:'all'}).then(res=>{\r\n                    console.log(res.object)\r\n                    this.setState({\r\n                        allEmployees:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllRoles().then(res=>{\r\n                    console.log(res,'roles')\r\n                    this.setState({\r\n                        roles:res\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const openSaveOrEditModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showSaveOrEditModal:!this.state.showSaveOrEditModal\r\n            })\r\n        }\r\n        const openDeleteModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showDeleteModal:!this.state.showDeleteModal\r\n            })\r\n        }\r\n        const saveOrEdit=(e,v)=>{\r\n            if (this.state.item){\r\n                v={...v,id:this.state.item.id}\r\n            }\r\n            AdminRequest.saveOrEditUser(v).then(res=>{\r\n                console.log(res,'res SaveOrEdit')\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:this.state.size,search:'all'}).then(res=>{\r\n                    this.setState({\r\n                        allEmployeesByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:0,search:'all'}).then(res=>{\r\n                    console.log(res.object)\r\n                    this.setState({\r\n                        allEmployees:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n                openSaveOrEditModal('')\r\n            })\r\n        }\r\n        const changeActive = (item) => {\r\n            AdminRequest.changeActiveOfUser(item.id).then(res=>{\r\n                console.log(res,'RES Change Active')\r\n                if (res.message==='Activated'){\r\n                    toast.success(res.message)\r\n                }\r\n                else {\r\n                    toast.warning(res.message)\r\n                }\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:this.state.size,search:'all'}).then(res=>{\r\n                    console.log(res.object)\r\n                    this.setState({\r\n                        allEmployeesByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n            })\r\n\r\n        }\r\n        const handlePageChange=(pageNumber)=>{\r\n            console.log(pageNumber,'PAGENumber')\r\n            AdminRequest.getAllUsersByPageable({page:pageNumber-1,size:this.state.size,search:'all'}).then(res=>{\r\n                this.setState({\r\n                    allEmployeesByPageable:res.object,\r\n                    totalElements:res.totalElements,\r\n                    page:pageNumber-1\r\n                })\r\n            })\r\n        }\r\n        const search=(e)=>{\r\n            let s= e.target.value;\r\n            console.log(s.length,'SSS')\r\n            if (s.length>=2){\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:this.state.size,search:s}).then(res=>{\r\n                    console.log(res.object)\r\n                    this.setState({\r\n                        allEmployeesByPageable:res.object,\r\n                        totalElements:res.totalElements\r\n                    })\r\n                })\r\n            }else {\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:this.state.size,search:'all'}).then(res=>{\r\n                    this.setState({\r\n                        allEmployeesByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const remove=()=>{\r\n            AdminRequest.removeUser(this.state.item.id).then(res=>{\r\n                AdminRequest.getAllUsersByPageable({page:this.state.page,size:this.state.size,search:'all'}).then(res=>{\r\n                    this.setState({\r\n                        allEmployeesByPageable:res.object,\r\n                        totalElements:res.totalElements,\r\n                        page:0,\r\n                        showDeleteModal:!this.state.showDeleteModal,\r\n                        item:''\r\n                    })\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                    <NavBar active={10}/>\r\n\r\n                <div className=\"col-md-12 bg-light\">\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-md-4\">\r\n                            <button className=\"btn btn-success\" onClick={()=>openSaveOrEditModal('')}>+Add</button>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input type={'text'} className=\"form-control\" placeholder={'Izlash'} onChange={search}/>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <Pagination\r\n                                activePage={this.state.page + 1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-md-12\">\r\n                            <Table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>T/R</th>\r\n                                    <th>username</th>\r\n                                    <th>first name</th>\r\n                                    <th>last name</th>\r\n                                    <th>phone number</th>\r\n                                    <th>fix salary</th>\r\n                                    <th>active</th>\r\n                                    <th>roles</th>\r\n                                    <th>action</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    this.state.allEmployeesByPageable?\r\n                                    this.state.allEmployeesByPageable.map((item,index)=>\r\n                                        <tr>\r\n                                            <td>{index+1+(this.state.page*this.state.size)}</td>\r\n                                            <td>{item.username}</td>\r\n                                            <td>{item.firstName}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.phoneNumber}</td>\r\n                                            <td>{item.fixSalary}</td>\r\n                                            <td>\r\n                                                <Switch checked={item.active} onChange={()=>changeActive(item)}/>\r\n                                            </td>\r\n                                            <td>{item.roles?\r\n                                                item.roles.map((e,v)=>\r\n                                            e.roleName\r\n\r\n                                            ):\r\n                                                ''\r\n                                            }</td>\r\n                                            <td>\r\n\r\n                                                <button className={'btn btn-warning'} onClick={()=>openSaveOrEditModal(item)}>Edit</button>\r\n                                                <button className={'btn btn-danger ml-3'} onClick={item.username==='admin'?'':()=>openDeleteModal(item)}>Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ):\r\n                                        ''\r\n                                }\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                    <Modal isOpen={this.state.showSaveOrEditModal} toggle={()=>openSaveOrEditModal('')}>\r\n                        <ModalHeader><h4>{this.state.item?\"Tahrirlash\":\"Yangi Xodim qoshish\"}</h4></ModalHeader>\r\n                        <AvForm onValidSubmit={saveOrEdit}>\r\n                            <ModalBody>\r\n                                <AvField type={'text'} defaultValue={this.state.item?this.state.item.username:''} name={'username'} requared label={'Enter Username'}/>\r\n                                <AvField type={'text'} defaultValue={this.state.item?this.state.item.firstName:''} name={'firstName'} label={'Enter firstName'}/>\r\n                                <AvField type={'text'} defaultValue={this.state.item?this.state.item.lastName:''} name={'lastName'} label={'Enter lastName'}/>\r\n                                <AvField type={'number'} defaultValue={this.state.item?this.state.item.phoneNumber:''} name={'phoneNumber'} label={'Enter phoneNumber'}/>\r\n                                <AvField type={'number'} defaultValue={this.state.item?this.state.item.fixSalary:''} name={'fixSalary'} label={'Enter fixSalary'}/>\r\n                                {!this.state.item?\r\n                                <AvField type={'password'}  name={'password'} label={'Enter password'}/>:\r\n                                    ''\r\n                                }\r\n                                <AvField type={'select'} name={'role'} label={'Choose Role'}>\r\n                                    <option value=\"0\">Choose role</option>\r\n                                    {\r\n                                        this.state.roles.length>0?\r\n                                            this.state.roles.map(item=>\r\n                                                <option value={item.id}>{item.roleName}</option>\r\n                                            ):''}\r\n                                </AvField>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className={'btn btn-danger'} onClick={()=>openSaveOrEditModal('')} type={'button'}>Bekor qilish</button>\r\n                                <button className={'btn btn-success'} type={'submit'}>Saqlash</button>\r\n                            </ModalFooter>\r\n                        </AvForm>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showDeleteModal} toggle={()=>openDeleteModal('')}>\r\n                        <ModalHeader>O'chirishni istaysizmi?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className={'btn btn-danger'} onClick={()=>openDeleteModal('')} type={'button'}>Bekor qilish</button>\r\n                            <button className={'btn btn-success'} onClick={remove}>O'chirish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore,null)(Employee);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BASE_URL, TOKEN_NAME} from \"../utills/constants\";\r\nimport axios from \"axios\";\r\nimport {api} from \"../apiPaths/api\";\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nclass Settings extends Component {\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res=>{\r\n            if (res===null){\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                    <NavBar active={6}/>\r\n                <div className=\"col-md-12\">\r\n                    <h1>This is Settings Page</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapsStore = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\nexport default connect(mapsStore,null)(Settings);","import React, {Component} from 'react';\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nimport AdminRequest from \"../components/AdminRequest\";\r\nimport {TOKEN_NAME} from \"../utills/constants\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader,Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nclass SalePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            showSaveModal: false,\r\n            showDeleteModal: false,\r\n            allDazvols: [],\r\n            active: true,\r\n            allDazvolsByPageable: [],\r\n            company: [],\r\n            companyId:'',\r\n            dazvol:[],\r\n            deleteIds:[],\r\n            dazvolName: [],\r\n            page: 0,\r\n            size: 10,\r\n            totalElements: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequest.me().then(res => {\r\n            if (res === null) {\r\n                localStorage.removeItem(TOKEN_NAME)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                AdminRequest.getAllDazvolSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllCompany().then(res => {\r\n                    console.log(res, \"company\")\r\n                    this.setState({\r\n                        company: res\r\n                    })\r\n                })\r\n                AdminRequest.getAllDazvolNames().then(res=>{\r\n                    console.log(res,\"dazvol \")\r\n                    this.setState({\r\n                        dazvolName:res\r\n                    })\r\n                })\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const openSaveOrEditModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showSaveOrEditModal: !this.state.showSaveOrEditModal\r\n            })\r\n        }\r\n        const openDeleteModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showDeleteModal: !this.state.showDeleteModal\r\n            })\r\n        }\r\n        const saveOrEdits = (e, v) => {\r\n            v = {...v,companyId:this.state.companyId}\r\n            AdminRequest.saveOrEditDazvolSale(v).then(res => {\r\n                console.log(v)\r\n                // if (res.data.success) {\r\n                //     toast.success(res.data.message)\r\n                // } else {\r\n                //     toast.warning(res.data.message)\r\n                // }\r\n                AdminRequest.getAllDazvolSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                AdminRequest.getAllDazvolSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: 0,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvols: res.object,\r\n                        totalElements: res.totalElements\r\n                    })\r\n                })\r\n                openSaveOrEditModal('')\r\n            })\r\n        }\r\n        const remove = () => {\r\n            AdminRequest.removeDazvolSale(5).then(res => {\r\n                console.log(res)\r\n                if (res.success) {\r\n                    toast.success(res.message)\r\n                } else {\r\n                    toast.warning(res.message)\r\n                }\r\n                AdminRequest.getAllDazvolsByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements,\r\n                        page: 0,\r\n                        showDeleteModal: !this.state.showDeleteModal,\r\n                        item: ''\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const search = (e) => {\r\n            let s = e.target.value;\r\n            console.log(s.length, 'SSS')\r\n            if (s.length >= 2) {\r\n                AdminRequest.getAllDazvolSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: s,\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements,\r\n                        page: 0\r\n                    })\r\n                })\r\n            } else {\r\n                AdminRequest.getAllDazvolSalesByPageable({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    search: 'all',\r\n                    active: this.state.active,\r\n                    companyId: 0\r\n                }).then(res => {\r\n                    this.setState({\r\n                        allDazvolsByPageable: res.object,\r\n                        totalElements: res.totalElements,\r\n                        page: 0\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const searchByCompany = (e) => {\r\n            let s = e.target.value;\r\n            console.log(s, \"company change\")\r\n\r\n            AdminRequest.getAllDazvolSalesByPageable({\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                search: 'all',\r\n                active: this.state.active,\r\n                companyId: s\r\n            }).then(res => {\r\n                this.setState({\r\n                    allDazvolsByPageable: res.object,\r\n                    totalElements: res.totalElements,\r\n                })\r\n            })\r\n        }\r\n        const handlePageChange = (pageNumber) => {\r\n            AdminRequest.getAllDazvolSalesByPageable({\r\n                page: pageNumber - 1,\r\n                size: this.state.size,\r\n                search: 'all',\r\n                active: this.state.active,\r\n                companyId: 0\r\n            }).then(res => {\r\n                this.setState({\r\n                    allDazvolsByPageable: res.object,\r\n                    totalElements: res.totalElements,\r\n                    page: pageNumber - 1\r\n                })\r\n            })\r\n        }\r\n        const s = (e,v) => {\r\n\r\n            AdminRequest.getAllDazvolByActive({\r\n                companyId: v.companyId,\r\n                dazvolNameId:v.dazvolNameId\r\n            }).then(res=>{\r\n                this.setState({\r\n                    companyId:v.companyId,\r\n                    dazvol:res.object\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"row bg-light\">\r\n                <NavBar active={5}/>\r\n                <div className=\"col-12\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-3 text-center\">\r\n                            <button className={'btn btn-success'} onClick={() => openSaveOrEditModal('')}>SALE</button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" onChange={search} className={'form-control'}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Pagination\r\n                                activePage={this.state.page + 1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"row d-flex justify-content-between align-items-center\">\r\n                                <select className=\"form-control w-75\" onChange={searchByCompany}\r\n                                        id=\"exampleFormControlSelect1\">\r\n                                    <option value={0}>Choose Company</option>\r\n                                    {\r\n                                        this.state.company.map((item, index) =>\r\n                                            <option value={item.id}>{item.authority}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n\r\n                        <Table bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Ismi</th>\r\n                                <th>Mashina raqami</th>\r\n                                <th>Sotilgan vaqti</th>\r\n                                <th>Company</th>\r\n                                <th>Sotuvchi</th>\r\n                                <th>Dazvols</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {\r\n                                this.state.allDazvolsByPageable ?\r\n                                    this.state.allDazvolsByPageable.map((item, index) =>\r\n                                        <tr className={'pt-2'}>\r\n                                            <td className={'text-center'}>{index + 1 + (this.state.page * this.state.size)}</td>\r\n                                            <td className={'text-center'}>{item.userName}</td>\r\n                                            <td className={'text-center'}>{item.carNumber}</td>\r\n                                            <td className={'text-center'}>{item.date}</td>\r\n                                            <td className={'text-center'}>{item.company.authority}</td>\r\n                                            <td className={'text-center'}>{item.customer.firstName}</td>\r\n                                            <td className={'text-center text-info dazvol px-4'}>{item.list? item.list.map((i, v) =>\r\n                                                <p>{i.dazvolNumber}</p>\r\n                                            ):''}</td>\r\n                                            <td>\r\n                                                <button className={'btn btn-warning text-center'} onClick={()=>openSaveOrEditModal(item)}>Edit</button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ) :\r\n                                    ''\r\n                            }\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </div>\r\n                    <Modal isOpen={this.state.showSaveOrEditModal} toggle={() => openSaveOrEditModal('')}>\r\n                        <ModalBody>\r\n                            <h4>{this.state.item ? \"Tahrirlash\" : \"Dazvol sotish\"}</h4>\r\n                            {this.state.item?'':\r\n                                <AvForm onValidSubmit={s}>\r\n                                    <AvField type={'select'} name={'companyId'} label={'Company tanlang'}>\r\n                                        <option value=\"0\">Choose Company</option>\r\n                                        {\r\n                                            this.state.company.length > 0 ?\r\n                                                this.state.company.map(item => (\r\n                                                        <option value={item.id}>{item.authority}</option>\r\n                                                    )\r\n                                                ) : ''\r\n                                        }\r\n                                    </AvField>\r\n                                    <AvField type={'select'} name={'dazvolNameId'} label={'Dazvol turini tanlang'}>\r\n                                        <option value=\"0\">Choose Dazvol</option>\r\n                                        {\r\n                                            this.state.dazvolName.length > 0 ?\r\n                                                this.state.dazvolName.map(item => (\r\n                                                        <option value={item.id}>{item.authority}</option>\r\n                                                    )\r\n                                                ) : ''\r\n                                        }\r\n                                    </AvField>\r\n                                    <button className={\"btn btn-success mt-2 text-center\"} type={'submit'}>Jo'natish</button>\r\n                                </AvForm>\r\n                            }\r\n                        </ModalBody>\r\n\r\n                        <AvForm onValidSubmit={saveOrEdits}>\r\n                            <ModalBody>\r\n                                <AvField type={'select'} defaultValue={this.state.item?this.state.item.dazvol?this.state.item.dazvol:'0':'0'} name={'dazvolIds'} multiple\r\n                                         label={'Dazvolni tanlang'}>\r\n                                    {\r\n                                        this.state.dazvol.length > 0 ?\r\n                                            this.state.dazvol.map(item => (\r\n                                                    <option value={item.id}>{item.dazvolNumber}</option>\r\n                                                )\r\n                                            ) : ''\r\n                                    }\r\n                                </AvField>\r\n                                <AvField type={'text'} name={'carNumber'} defaultValue={this.state.item?this.state.item.carNumber:''} label={'Mashina raqamini kiriting'}/>\r\n                                <AvField type={'text'} name={'userName'} defaultValue={this.state.item?this.state.item.userName:''} label={'Haydovchi ismi kiriting'}/>\r\n\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className={'btn btn-danger'} onClick={() => openSaveOrEditModal('')}\r\n                                        type={'button'}>Bekor qilish\r\n                                </button>\r\n                                <button className={'btn btn-success'} type={'submit'}>Saqlash</button>\r\n                            </ModalFooter>\r\n                        </AvForm>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showDeleteModal} toggle={() => openDeleteModal('')}>\r\n                        <ModalHeader>O'chirishni istaysizmi?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className={'btn btn-danger'} onClick={() => openDeleteModal('')}\r\n                                    type={'button'}>Bekor qilish\r\n                            </button>\r\n                            <button className={'btn btn-success'} onClick={remove}>O'chirish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalePage;","import {BrowserRouter,Switch,Route} from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport SalePage from \"./pages/SalePage\";\r\nimport {combineReducers, createStore} from 'redux'\r\nimport auth from \"./redux/reducers/authReducer\";\r\nimport {Provider} from \"react-redux\";\r\nimport Orders from \"./pages/Dazvol\";\r\nimport Supplier from \"./pages/Supplier\";\r\nimport Warehouse from \"./pages/Warehouse\";\r\nimport Products from \"./pages/Products\";\r\nimport KPI from \"./pages/TIR\";\r\nimport Employee from \"./pages/Employee\";\r\nimport Settings from \"./pages/Settings\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Dazvol from \"./pages/Dazvol\";\r\nimport TIR from \"./pages/TIR\";\r\nimport DazvolSale from \"./pages/DazvolSale\";\r\n\r\nconst allReducers=combineReducers(\r\nauth\r\n)\r\nconst store=createStore(\r\nallReducers\r\n)\r\nconst App=()=>{\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <ToastContainer/>\r\n        <Switch>\r\n            <Route path=\"/dashboard\" component={Dashboard}/>\r\n            <Route path=\"/dazvol\" component={Dazvol}/>\r\n            <Route path=\"/tirSale\" component={SalePage}/>\r\n            <Route path=\"/dazvolSale\" component={DazvolSale}/>\r\n            <Route path=\"/tir\" component={TIR}/>\r\n            <Route path=\"/employee\" component={Employee}/>\r\n            <Route path=\"/setting\" component={Settings}/>\r\n            <Route path=\"/\" component={HomePage}/>\r\n        </Switch>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport './Loading.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}